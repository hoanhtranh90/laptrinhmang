15/05/2022 01:00:57 WARN  - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@2a351fe (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
15/05/2022 01:00:57 WARN  - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@a981cb5 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
15/05/2022 01:00:57 WARN  - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@66c8a6a7 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
15/05/2022 01:00:57 WARN  - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@574018aa (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
15/05/2022 01:00:57 WARN  - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@373a55ce (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
15/05/2022 01:00:57 WARN  - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@7d8d9a28 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
15/05/2022 01:00:57 WARN  - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@5ed3e6a0 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
15/05/2022 01:00:57 WARN  - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@9812098 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
15/05/2022 01:00:57 WARN  - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@6cf08043 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
15/05/2022 01:00:57 WARN  - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@7d3d0b2f (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
15/05/2022 01:03:34 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 01:03:34 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 01:03:34 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 01:03:43 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 12448 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 01:03:43 INFO  - The following profiles are active: dev
15/05/2022 01:03:46 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 01:03:46 INFO  - Finished Spring Data repository scanning in 143 ms. Found 14 JPA repository interfaces.
15/05/2022 01:03:47 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$67c9e15a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 01:03:48 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 01:03:48 INFO  - Starting service [Tomcat]
15/05/2022 01:03:48 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 01:03:48 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 01:03:48 INFO  - Root WebApplicationContext: initialization completed in 4870 ms
15/05/2022 01:03:48 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 01:03:48 INFO  - HikariPool-1 - Starting...
15/05/2022 01:03:49 INFO  - HikariPool-1 - Start completed.
15/05/2022 01:03:49 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 01:03:49 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 01:03:49 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 01:03:49 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 01:03:53 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 01:03:53 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 01:03:54 INFO  - readPublicKey: dev_public.key
15/05/2022 01:03:55 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 01:03:55 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 01:03:55 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 01:03:55 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 01:03:55 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 01:03:55 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 01:03:55 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 01:03:55 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 01:03:55 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 01:03:55 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 01:03:55 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 01:03:55 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 01:03:55 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 01:03:55 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 01:03:55 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 01:03:55 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 01:03:55 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 01:03:55 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5a04e7ef, org.springframework.security.web.context.SecurityContextPersistenceFilter@513ad29e, org.springframework.security.web.header.HeaderWriterFilter@3593747f, org.springframework.web.filter.CorsFilter@76225435, org.springframework.security.web.authentication.logout.LogoutFilter@5bff7f13, com.business.authencation.JwtAuthenticationFilter@70886b0e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2ee6196f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@67fd59f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4f401aac, org.springframework.security.web.session.SessionManagementFilter@876686, org.springframework.security.web.access.ExceptionTranslationFilter@2c227f74, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3f3953c3]
15/05/2022 01:03:55 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 01:03:56 INFO  - Started BusinessApplication in 13.51 seconds (JVM running for 15.207)
15/05/2022 01:03:56 INFO  - Account management already exsit.
15/05/2022 01:03:57 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 01:05:56 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 01:05:56 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 01:05:56 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 01:06:01 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 8844 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 01:06:01 INFO  - The following profiles are active: dev
15/05/2022 01:06:03 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 01:06:03 INFO  - Finished Spring Data repository scanning in 97 ms. Found 14 JPA repository interfaces.
15/05/2022 01:06:03 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$7579e0cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 01:06:04 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 01:06:04 INFO  - Starting service [Tomcat]
15/05/2022 01:06:04 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 01:06:04 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 01:06:04 INFO  - Root WebApplicationContext: initialization completed in 3263 ms
15/05/2022 01:06:04 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 01:06:04 INFO  - HikariPool-1 - Starting...
15/05/2022 01:06:04 INFO  - HikariPool-1 - Start completed.
15/05/2022 01:06:04 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 01:06:05 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 01:06:05 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 01:06:05 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 01:06:09 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 01:06:09 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 01:06:09 INFO  - readPublicKey: dev_public.key
15/05/2022 01:06:10 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 01:06:10 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 01:06:10 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 01:06:10 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 01:06:10 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 01:06:10 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 01:06:10 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 01:06:10 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 01:06:10 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 01:06:10 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 01:06:10 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 01:06:10 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 01:06:10 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 01:06:10 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 01:06:10 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 01:06:10 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 01:06:10 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 01:06:11 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@768cfd06, org.springframework.security.web.context.SecurityContextPersistenceFilter@4b7c4e0e, org.springframework.security.web.header.HeaderWriterFilter@7e8e2fc7, org.springframework.web.filter.CorsFilter@37b6dedf, org.springframework.security.web.authentication.logout.LogoutFilter@569ac51e, com.business.authencation.JwtAuthenticationFilter@131af11d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@48f7dbe0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1e9b9276, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@22c1cc8d, org.springframework.security.web.session.SessionManagementFilter@62ea4894, org.springframework.security.web.access.ExceptionTranslationFilter@57f60b5e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@113773b5]
15/05/2022 01:06:11 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 01:06:11 INFO  - Started BusinessApplication in 11.432 seconds (JVM running for 12.714)
15/05/2022 01:06:12 INFO  - Account management already exsit.
15/05/2022 01:06:12 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 01:07:43 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 01:07:43 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 01:07:43 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 10:21:24 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 8788 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 10:21:24 INFO  - The following profiles are active: dev
15/05/2022 10:21:29 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 10:21:30 INFO  - Finished Spring Data repository scanning in 186 ms. Found 14 JPA repository interfaces.
15/05/2022 10:21:31 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$ecebe58a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 10:21:32 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 10:21:32 INFO  - Starting service [Tomcat]
15/05/2022 10:21:32 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 10:21:32 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 10:21:32 INFO  - Root WebApplicationContext: initialization completed in 8143 ms
15/05/2022 10:21:32 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 10:21:32 INFO  - HikariPool-1 - Starting...
15/05/2022 10:22:41 ERROR - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:47)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:233)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1234)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:494)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:349)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:342)
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.findEntityManagerFactory(EntityManagerFactoryUtils.java:121)
	at org.springframework.orm.jpa.EntityManagerFactoryAccessor.setBeanFactory(EntityManagerFactoryAccessor.java:155)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeAwareMethods(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1791)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1598)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1562)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:760)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:720)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:760)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:720)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:212)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:175)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:155)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:260)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5219)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1396)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1386)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:919)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:835)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1396)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1386)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:919)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:263)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:432)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:927)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:450)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:199)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:182)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:160)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.business.BusinessApplication.main(BusinessApplication.java:17)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:119)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 156 common frames omitted
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:81)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:162)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 158 common frames omitted
15/05/2022 10:22:41 ERROR - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'webSecurityConfig': Unsatisfied dependency expressed through method 'setContentNegotationStrategy' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.UncategorizedScriptException: Failed to execute database script; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
15/05/2022 10:22:41 INFO  - Stopping service [Tomcat]
15/05/2022 10:22:41 WARN  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
15/05/2022 10:22:41 INFO  - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
15/05/2022 10:22:41 ERROR - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:163)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:577)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.business.BusinessApplication.main(BusinessApplication.java:17)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:450)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:199)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:182)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:160)
	... 8 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webSecurityConfig': Unsatisfied dependency expressed through method 'setContentNegotationStrategy' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.UncategorizedScriptException: Failed to execute database script; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:720)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:212)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:175)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:170)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:155)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:260)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:234)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5219)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1396)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1386)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:919)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:835)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1396)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1386)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:919)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:263)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:432)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:927)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 13 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration': Unsatisfied dependency expressed through method 'setConfigurers' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.UncategorizedScriptException: Failed to execute database script; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:768)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:720)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:760)
	... 66 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'openEntityManagerInViewInterceptorConfigurer' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Unsatisfied dependency expressed through method 'openEntityManagerInViewInterceptorConfigurer' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.UncategorizedScriptException: Failed to execute database script; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1195)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1598)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1562)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1451)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.resolveMethodArguments(AutowiredAnnotationBeanPostProcessor.java:760)
	... 89 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'openEntityManagerInViewInterceptor' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/JpaBaseConfiguration$JpaWebConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.UncategorizedScriptException: Failed to execute database script; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:628)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 105 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.UncategorizedScriptException: Failed to execute database script; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:233)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1234)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:494)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:349)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:342)
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.findEntityManagerFactory(EntityManagerFactoryUtils.java:121)
	at org.springframework.orm.jpa.EntityManagerFactoryAccessor.setBeanFactory(EntityManagerFactoryAccessor.java:155)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeAwareMethods(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1791)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	... 115 common frames omitted
Caused by: org.springframework.jdbc.datasource.init.UncategorizedScriptException: Failed to execute database script; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:59)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 133 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:47)
	... 141 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:89)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:63)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:73)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:898)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:364)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:476)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 142 common frames omitted
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:119)
	at com.mysql.cj.jdbc.ConnectionImpl.connectWithRetries(ConnectionImpl.java:842)
	... 156 common frames omitted
Caused by: java.net.ConnectException: Connection timed out: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:81)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:476)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:218)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:200)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:162)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:394)
	at java.net.Socket.connect(Socket.java:606)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:156)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63)
	... 158 common frames omitted
15/05/2022 10:23:43 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 16768 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 10:23:43 INFO  - The following profiles are active: dev
15/05/2022 10:23:46 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 10:23:46 INFO  - Finished Spring Data repository scanning in 107 ms. Found 14 JPA repository interfaces.
15/05/2022 10:23:47 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$6a484d45] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 10:23:47 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 10:23:47 INFO  - Starting service [Tomcat]
15/05/2022 10:23:47 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 10:23:47 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 10:23:47 INFO  - Root WebApplicationContext: initialization completed in 3657 ms
15/05/2022 10:23:47 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 10:23:47 INFO  - HikariPool-1 - Starting...
15/05/2022 10:23:48 INFO  - HikariPool-1 - Start completed.
15/05/2022 10:23:48 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 10:23:48 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 10:23:48 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 10:23:48 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 10:23:52 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 10:23:52 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 10:23:53 INFO  - readPublicKey: dev_public.key
15/05/2022 10:23:54 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 10:23:54 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 10:23:54 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 10:23:54 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 10:23:54 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 10:23:54 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 10:23:54 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 10:23:54 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 10:23:54 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 10:23:54 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 10:23:54 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 10:23:54 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 10:23:54 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 10:23:54 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 10:23:54 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 10:23:54 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 10:23:54 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 10:23:54 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@f501ed0, org.springframework.security.web.context.SecurityContextPersistenceFilter@166a38a8, org.springframework.security.web.header.HeaderWriterFilter@33d89052, org.springframework.web.filter.CorsFilter@456454e0, org.springframework.security.web.authentication.logout.LogoutFilter@2cc76912, com.business.authencation.JwtAuthenticationFilter@12c21282, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6827f0b7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2a806a8d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6586b4e3, org.springframework.security.web.session.SessionManagementFilter@2c792d36, org.springframework.security.web.access.ExceptionTranslationFilter@4eb870be, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@22f8be7c]
15/05/2022 10:23:55 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 10:23:55 INFO  - Started BusinessApplication in 12.651 seconds (JVM running for 14.358)
15/05/2022 10:23:55 INFO  - Account management already exsit.
15/05/2022 10:23:56 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 10:36:49 WARN  - HikariPool-1 - Connection com.mysql.cj.jdbc.ConnectionImpl@47eb3bf7 marked as broken because of SQLSTATE(08S01), ErrorCode(0)
com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 19.236 milliseconds ago. The last packet sent successfully to the server was 19.241 milliseconds ago.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:2045)
	at com.zaxxer.hikari.pool.ProxyConnection.setAutoCommit(ProxyConnection.java:414)
	at com.zaxxer.hikari.pool.HikariProxyConnection.setAutoCommit(HikariProxyConnection.java)
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:72)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.begin(LogicalConnectionManagedImpl.java:285)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.begin(JdbcResourceLocalTransactionCoordinatorImpl.java:246)
	at org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:83)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:164)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:421)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:595)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:382)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.business.authencation.UserDetailsServiceImpl$$EnhancerBySpringCGLIB$$7d889ac.loadCustomUserByUsername(<generated>)
	at com.business.authencation.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:119)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet successfully received from the server was 19.236 milliseconds ago. The last packet sent successfully to the server was 19.241 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:519)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:683)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:622)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:970)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryString(NativeProtocol.java:916)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:660)
	at com.mysql.cj.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:2035)
	... 74 common frames omitted
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:513)
	... 80 common frames omitted
15/05/2022 10:36:49 WARN  - HikariPool-1 - Connection com.mysql.cj.jdbc.ConnectionImpl@33ba0c64 marked as broken because of SQLSTATE(08S01), ErrorCode(0)
com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 19.236 milliseconds ago. The last packet sent successfully to the server was 19.242 milliseconds ago.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:2045)
	at com.zaxxer.hikari.pool.ProxyConnection.setAutoCommit(ProxyConnection.java:414)
	at com.zaxxer.hikari.pool.HikariProxyConnection.setAutoCommit(HikariProxyConnection.java)
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:72)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.begin(LogicalConnectionManagedImpl.java:285)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.begin(JdbcResourceLocalTransactionCoordinatorImpl.java:246)
	at org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:83)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:164)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:421)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:595)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:382)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.business.authencation.UserDetailsServiceImpl$$EnhancerBySpringCGLIB$$7d889ac.loadCustomUserByUsername(<generated>)
	at com.business.authencation.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:119)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet successfully received from the server was 19.236 milliseconds ago. The last packet sent successfully to the server was 19.242 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:519)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:683)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:622)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:970)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryString(NativeProtocol.java:916)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:660)
	at com.mysql.cj.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:2035)
	... 74 common frames omitted
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:513)
	... 80 common frames omitted
15/05/2022 10:36:49 WARN  - HikariPool-1 - Connection com.mysql.cj.jdbc.ConnectionImpl@4ad02857 marked as broken because of SQLSTATE(08S01), ErrorCode(0)
com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 19.202 milliseconds ago. The last packet sent successfully to the server was 19.206 milliseconds ago.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:2045)
	at com.zaxxer.hikari.pool.ProxyConnection.setAutoCommit(ProxyConnection.java:414)
	at com.zaxxer.hikari.pool.HikariProxyConnection.setAutoCommit(HikariProxyConnection.java)
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:72)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.begin(LogicalConnectionManagedImpl.java:285)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.begin(JdbcResourceLocalTransactionCoordinatorImpl.java:246)
	at org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:83)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:164)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:421)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:595)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:382)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.business.authencation.UserDetailsServiceImpl$$EnhancerBySpringCGLIB$$7d889ac.loadCustomUserByUsername(<generated>)
	at com.business.authencation.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:119)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet successfully received from the server was 19.202 milliseconds ago. The last packet sent successfully to the server was 19.206 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:519)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:683)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:622)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:970)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryString(NativeProtocol.java:916)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:660)
	at com.mysql.cj.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:2035)
	... 74 common frames omitted
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:513)
	... 80 common frames omitted
15/05/2022 10:36:49 WARN  - HikariPool-1 - Connection com.mysql.cj.jdbc.ConnectionImpl@220cf948 marked as broken because of SQLSTATE(08S01), ErrorCode(0)
com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 19.232 milliseconds ago. The last packet sent successfully to the server was 19.236 milliseconds ago.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:2045)
	at com.zaxxer.hikari.pool.ProxyConnection.setAutoCommit(ProxyConnection.java:414)
	at com.zaxxer.hikari.pool.HikariProxyConnection.setAutoCommit(HikariProxyConnection.java)
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:72)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.begin(LogicalConnectionManagedImpl.java:285)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.begin(JdbcResourceLocalTransactionCoordinatorImpl.java:246)
	at org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:83)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:164)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:421)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:595)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:382)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.business.authencation.UserDetailsServiceImpl$$EnhancerBySpringCGLIB$$7d889ac.loadCustomUserByUsername(<generated>)
	at com.business.authencation.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:119)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet successfully received from the server was 19.232 milliseconds ago. The last packet sent successfully to the server was 19.236 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:519)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:683)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:622)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:970)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryString(NativeProtocol.java:916)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:660)
	at com.mysql.cj.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:2035)
	... 74 common frames omitted
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:513)
	... 80 common frames omitted
15/05/2022 10:36:49 WARN  - HikariPool-1 - Connection com.mysql.cj.jdbc.ConnectionImpl@2fc58d37 marked as broken because of SQLSTATE(08S01), ErrorCode(0)
com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 19.188 milliseconds ago. The last packet sent successfully to the server was 19.192 milliseconds ago.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:2045)
	at com.zaxxer.hikari.pool.ProxyConnection.setAutoCommit(ProxyConnection.java:414)
	at com.zaxxer.hikari.pool.HikariProxyConnection.setAutoCommit(HikariProxyConnection.java)
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:72)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.begin(LogicalConnectionManagedImpl.java:285)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.begin(JdbcResourceLocalTransactionCoordinatorImpl.java:246)
	at org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:83)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:164)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:421)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:595)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:382)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.business.authencation.UserDetailsServiceImpl$$EnhancerBySpringCGLIB$$7d889ac.loadCustomUserByUsername(<generated>)
	at com.business.authencation.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:119)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet successfully received from the server was 19.188 milliseconds ago. The last packet sent successfully to the server was 19.192 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:519)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:683)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:622)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:970)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryString(NativeProtocol.java:916)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:660)
	at com.mysql.cj.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:2035)
	... 74 common frames omitted
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:513)
	... 80 common frames omitted
15/05/2022 10:36:49 ERROR - jwtAuthentication - GET 0:0:0:0:0:0:0:1:19010/business/files/getFileByObjectIdAndObjectType - Could not open JPA EntityManager for transaction; nested exception is org.hibernate.TransactionException: JDBC begin transaction failed: 
15/05/2022 10:36:49 ERROR - jwtAuthentication - GET 0:0:0:0:0:0:0:1:19010/business/files/getFileByObjectIdAndObjectType - Could not open JPA EntityManager for transaction; nested exception is org.hibernate.TransactionException: JDBC begin transaction failed: 
15/05/2022 10:36:49 WARN  - HikariPool-1 - Connection com.mysql.cj.jdbc.ConnectionImpl@26b03062 marked as broken because of SQLSTATE(08S01), ErrorCode(0)
com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet successfully received from the server was 19.245 milliseconds ago. The last packet sent successfully to the server was 19.249 milliseconds ago.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:2045)
	at com.zaxxer.hikari.pool.ProxyConnection.setAutoCommit(ProxyConnection.java:414)
	at com.zaxxer.hikari.pool.HikariProxyConnection.setAutoCommit(HikariProxyConnection.java)
	at org.hibernate.resource.jdbc.internal.AbstractLogicalConnectionImplementor.begin(AbstractLogicalConnectionImplementor.java:72)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.begin(LogicalConnectionManagedImpl.java:285)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.begin(JdbcResourceLocalTransactionCoordinatorImpl.java:246)
	at org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:83)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.beginTransaction(HibernateJpaDialect.java:164)
	at org.springframework.orm.jpa.JpaTransactionManager.doBegin(JpaTransactionManager.java:421)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.createTransactionIfNecessary(TransactionAspectSupport.java:595)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:382)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.business.authencation.UserDetailsServiceImpl$$EnhancerBySpringCGLIB$$7d889ac.loadCustomUserByUsername(<generated>)
	at com.business.authencation.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:119)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet successfully received from the server was 19.245 milliseconds ago. The last packet sent successfully to the server was 19.249 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:519)
	at com.mysql.cj.protocol.a.NativeProtocol.checkErrorMessage(NativeProtocol.java:683)
	at com.mysql.cj.protocol.a.NativeProtocol.sendCommand(NativeProtocol.java:622)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryPacket(NativeProtocol.java:970)
	at com.mysql.cj.protocol.a.NativeProtocol.sendQueryString(NativeProtocol.java:916)
	at com.mysql.cj.NativeSession.execSQL(NativeSession.java:660)
	at com.mysql.cj.jdbc.ConnectionImpl.setAutoCommit(ConnectionImpl.java:2035)
	... 74 common frames omitted
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:171)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
	at com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
	at com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
	at java.io.FilterInputStream.read(FilterInputStream.java:133)
	at com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
	at com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:52)
	at com.mysql.cj.protocol.a.TimeTrackingPacketReader.readHeader(TimeTrackingPacketReader.java:41)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:54)
	at com.mysql.cj.protocol.a.MultiPacketReader.readHeader(MultiPacketReader.java:44)
	at com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:513)
	... 80 common frames omitted
15/05/2022 10:36:49 ERROR - jwtAuthentication - GET 0:0:0:0:0:0:0:1:19010/business/files/getFileByObjectIdAndObjectType - Could not open JPA EntityManager for transaction; nested exception is org.hibernate.TransactionException: JDBC begin transaction failed: 
15/05/2022 10:36:49 ERROR - jwtAuthentication - GET 0:0:0:0:0:0:0:1:19010/business/files/getFileByObjectIdAndObjectType - Could not open JPA EntityManager for transaction; nested exception is org.hibernate.TransactionException: JDBC begin transaction failed: 
15/05/2022 10:36:49 ERROR - jwtAuthentication - GET 0:0:0:0:0:0:0:1:19010/business/files/getFileByObjectIdAndObjectType - Could not open JPA EntityManager for transaction; nested exception is org.hibernate.TransactionException: JDBC begin transaction failed: 
15/05/2022 10:36:49 ERROR - jwtAuthentication - POST 0:0:0:0:0:0:0:1:19010/business/post/search - Could not open JPA EntityManager for transaction; nested exception is org.hibernate.TransactionException: JDBC begin transaction failed: 
15/05/2022 10:36:54 WARN  - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@54d8a4c0 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
15/05/2022 10:36:54 WARN  - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@35923ea (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
15/05/2022 10:36:54 WARN  - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@391cd89d (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
15/05/2022 10:36:54 WARN  - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@10c08e61 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
15/05/2022 10:37:19 WARN  - SQL Error: 0, SQLState: 08003
15/05/2022 10:37:19 WARN  - SQL Error: 0, SQLState: 08003
15/05/2022 10:37:19 WARN  - SQL Error: 0, SQLState: 08003
15/05/2022 10:37:19 ERROR - HikariPool-1 - Connection is not available, request timed out after 30010ms.
15/05/2022 10:37:19 ERROR - HikariPool-1 - Connection is not available, request timed out after 30008ms.
15/05/2022 10:37:19 ERROR - HikariPool-1 - Connection is not available, request timed out after 30010ms.
15/05/2022 10:37:19 ERROR - No operations allowed after connection closed.
15/05/2022 10:37:19 ERROR - No operations allowed after connection closed.
15/05/2022 10:37:19 ERROR - No operations allowed after connection closed.
15/05/2022 10:37:19 ERROR - jwtAuthentication - GET 0:0:0:0:0:0:0:1:19010/business/files/getFileByObjectIdAndObjectType - Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
15/05/2022 10:37:19 ERROR - jwtAuthentication - GET 0:0:0:0:0:0:0:1:19010/business/files/getFileByObjectIdAndObjectType - Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
15/05/2022 10:37:19 ERROR - jwtAuthentication - GET 0:0:0:0:0:0:0:1:19010/business/files/getFileByObjectIdAndObjectType - Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
15/05/2022 10:37:19 WARN  - SQL Error: 0, SQLState: 08003
15/05/2022 10:37:19 ERROR - HikariPool-1 - Connection is not available, request timed out after 30006ms.
15/05/2022 10:37:19 ERROR - No operations allowed after connection closed.
15/05/2022 10:37:19 ERROR - jwtAuthentication - POST 0:0:0:0:0:0:0:1:19010/business/post/search - Could not open JPA EntityManager for transaction; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
15/05/2022 10:40:58 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 10:40:58 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 10:41:28 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 10:59:29 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 3720 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 10:59:29 INFO  - The following profiles are active: dev
15/05/2022 10:59:32 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 10:59:33 INFO  - Finished Spring Data repository scanning in 102 ms. Found 14 JPA repository interfaces.
15/05/2022 10:59:33 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$d9a0af66] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 10:59:34 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 10:59:34 INFO  - Starting service [Tomcat]
15/05/2022 10:59:34 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 10:59:34 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 10:59:34 INFO  - Root WebApplicationContext: initialization completed in 4821 ms
15/05/2022 10:59:34 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 10:59:34 INFO  - HikariPool-1 - Starting...
15/05/2022 10:59:34 INFO  - HikariPool-1 - Start completed.
15/05/2022 10:59:34 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 10:59:34 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 10:59:35 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 10:59:35 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 10:59:39 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 10:59:39 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 10:59:40 INFO  - readPublicKey: dev_public.key
15/05/2022 10:59:41 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 10:59:41 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 10:59:41 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 10:59:41 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 10:59:41 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 10:59:41 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 10:59:41 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 10:59:41 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 10:59:41 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 10:59:41 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 10:59:41 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 10:59:41 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 10:59:41 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 10:59:41 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 10:59:41 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 10:59:41 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 10:59:41 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 10:59:41 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7ac66113, org.springframework.security.web.context.SecurityContextPersistenceFilter@63dd100c, org.springframework.security.web.header.HeaderWriterFilter@736f4c27, org.springframework.web.filter.CorsFilter@f0b01d4, org.springframework.security.web.authentication.logout.LogoutFilter@2775dd2e, com.business.authencation.JwtAuthenticationFilter@53bf7b33, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6be4686b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@166a38a8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6114adbe, org.springframework.security.web.session.SessionManagementFilter@65b4a0d2, org.springframework.security.web.access.ExceptionTranslationFilter@6af78b2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@650e9dca]
15/05/2022 10:59:42 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 10:59:42 INFO  - Started BusinessApplication in 13.669 seconds (JVM running for 16.2)
15/05/2022 10:59:42 INFO  - Account management already exsit.
15/05/2022 10:59:43 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 11:23:44 ERROR - jwtAuthentication - GET 0:0:0:0:0:0:0:1:19010/business/follow/list-follow - Token không được bỏ trống.
15/05/2022 11:28:09 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 11:28:09 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 11:28:09 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 11:28:19 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 2168 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 11:28:19 INFO  - The following profiles are active: dev
15/05/2022 11:28:22 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 11:28:22 INFO  - Finished Spring Data repository scanning in 95 ms. Found 14 JPA repository interfaces.
15/05/2022 11:28:23 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$7a536a67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 11:28:23 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 11:28:23 INFO  - Starting service [Tomcat]
15/05/2022 11:28:23 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 11:28:23 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 11:28:23 INFO  - Root WebApplicationContext: initialization completed in 3479 ms
15/05/2022 11:28:23 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 11:28:23 INFO  - HikariPool-1 - Starting...
15/05/2022 11:28:24 INFO  - HikariPool-1 - Start completed.
15/05/2022 11:28:24 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 11:28:24 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 11:28:24 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 11:28:24 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 11:28:28 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 11:28:28 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 11:28:29 INFO  - readPublicKey: dev_public.key
15/05/2022 11:28:31 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 11:28:31 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 11:28:31 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 11:28:31 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 11:28:31 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 11:28:31 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 11:28:31 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 11:28:31 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 11:28:31 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 11:28:31 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 11:28:31 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 11:28:31 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 11:28:31 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 11:28:31 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 11:28:31 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 11:28:31 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 11:28:31 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 11:28:31 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@10a479fe, org.springframework.security.web.context.SecurityContextPersistenceFilter@1235abb2, org.springframework.security.web.header.HeaderWriterFilter@2275d28a, org.springframework.web.filter.CorsFilter@7beb2da0, org.springframework.security.web.authentication.logout.LogoutFilter@2c720867, com.business.authencation.JwtAuthenticationFilter@7672ea5f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@641423eb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5cfed4ee, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2cc76912, org.springframework.security.web.session.SessionManagementFilter@6130156b, org.springframework.security.web.access.ExceptionTranslationFilter@6534f871, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@34e10162]
15/05/2022 11:28:32 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 11:28:33 INFO  - Started BusinessApplication in 13.952 seconds (JVM running for 15.334)
15/05/2022 11:28:33 INFO  - Account management already exsit.
15/05/2022 11:28:34 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 11:29:23 ERROR - errorHoanhtranh1 - GET 0:0:0:0:0:0:0:1:19010/business/follow/list-follow - Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]; nested exception is com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: com.core.model.ResponseBody["body"]->org.springframework.data.domain.PageImpl["content"]->java.util.Collections$UnmodifiableRandomAccessList[0]->com.core.entity.Follow["follower"]->com.core.entity.User$HibernateProxy$avWYTW9z["hibernateLazyInitializer"])
15/05/2022 11:31:38 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 11:31:38 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 11:31:38 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 11:31:48 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 15156 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 11:31:48 INFO  - The following profiles are active: dev
15/05/2022 11:31:50 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 11:31:50 INFO  - Finished Spring Data repository scanning in 102 ms. Found 14 JPA repository interfaces.
15/05/2022 11:31:51 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$126a5496] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 11:31:51 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 11:31:52 INFO  - Starting service [Tomcat]
15/05/2022 11:31:52 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 11:31:52 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 11:31:52 INFO  - Root WebApplicationContext: initialization completed in 3930 ms
15/05/2022 11:31:52 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 11:31:52 INFO  - HikariPool-1 - Starting...
15/05/2022 11:31:52 INFO  - HikariPool-1 - Start completed.
15/05/2022 11:31:52 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 11:31:52 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 11:31:52 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 11:31:53 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 11:31:56 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 11:31:56 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 11:31:57 INFO  - readPublicKey: dev_public.key
15/05/2022 11:31:58 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 11:31:58 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 11:31:58 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 11:31:58 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 11:31:58 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 11:31:58 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 11:31:58 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 11:31:58 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 11:31:58 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 11:31:58 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 11:31:58 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 11:31:58 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 11:31:58 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 11:31:58 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 11:31:58 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 11:31:58 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 11:31:58 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 11:31:58 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@41274a53, org.springframework.security.web.context.SecurityContextPersistenceFilter@43df5cba, org.springframework.security.web.header.HeaderWriterFilter@2cc76912, org.springframework.web.filter.CorsFilter@20a7dc29, org.springframework.security.web.authentication.logout.LogoutFilter@73cb4016, com.business.authencation.JwtAuthenticationFilter@1a35f99a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@25ef4ad5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@a739cd9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@61a4a71c, org.springframework.security.web.session.SessionManagementFilter@7e821499, org.springframework.security.web.access.ExceptionTranslationFilter@10a479fe, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@63cb1a9a]
15/05/2022 11:31:59 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 11:31:59 INFO  - Started BusinessApplication in 12.356 seconds (JVM running for 13.994)
15/05/2022 11:31:59 INFO  - Account management already exsit.
15/05/2022 11:32:00 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 11:34:03 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 11:34:03 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 11:34:03 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 13:15:08 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 11284 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 13:15:08 INFO  - The following profiles are active: dev
15/05/2022 13:15:16 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 13:15:16 INFO  - Finished Spring Data repository scanning in 282 ms. Found 14 JPA repository interfaces.
15/05/2022 13:15:18 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$85073c44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 13:15:19 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 13:15:19 INFO  - Starting service [Tomcat]
15/05/2022 13:15:19 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 13:15:19 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 13:15:19 INFO  - Root WebApplicationContext: initialization completed in 11029 ms
15/05/2022 13:15:19 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 13:15:20 INFO  - HikariPool-1 - Starting...
15/05/2022 13:15:20 INFO  - HikariPool-1 - Start completed.
15/05/2022 13:15:20 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 13:15:20 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 13:15:21 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 13:15:21 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 13:15:25 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 13:15:25 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 13:15:26 INFO  - readPublicKey: dev_public.key
15/05/2022 13:15:27 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 13:15:28 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 13:15:28 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 13:15:28 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 13:15:28 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 13:15:28 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 13:15:28 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 13:15:28 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 13:15:28 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 13:15:28 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 13:15:28 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 13:15:28 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 13:15:28 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 13:15:28 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 13:15:28 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 13:15:28 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 13:15:28 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 13:15:28 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@26c8a6b3, org.springframework.security.web.context.SecurityContextPersistenceFilter@3a0f0552, org.springframework.security.web.header.HeaderWriterFilter@320f9b40, org.springframework.web.filter.CorsFilter@3f3953c3, org.springframework.security.web.authentication.logout.LogoutFilter@517c2be7, com.business.authencation.JwtAuthenticationFilter@70366fb5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3171c5e6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@604c8ed5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@633f8efd, org.springframework.security.web.session.SessionManagementFilter@2f8b373f, org.springframework.security.web.access.ExceptionTranslationFilter@1bffbac, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@317188d0]
15/05/2022 13:15:28 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 13:15:28 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 13:15:29 INFO  - Started BusinessApplication in 22.166 seconds (JVM running for 26.386)
15/05/2022 13:15:29 INFO  - Account management already exsit.
15/05/2022 13:18:20 WARN  - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@30eb9de (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
15/05/2022 13:18:20 WARN  - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@482cbdc4 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
15/05/2022 13:18:20 WARN  - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@795967f3 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
15/05/2022 13:18:20 WARN  - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@4ede0867 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
15/05/2022 13:18:20 WARN  - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@62b1078e (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
15/05/2022 13:18:20 WARN  - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@1407924f (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
15/05/2022 13:18:20 WARN  - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@63b14ee5 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
15/05/2022 13:18:20 WARN  - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@1e61cd1f (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
15/05/2022 13:18:20 WARN  - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@103e2957 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
15/05/2022 13:18:20 WARN  - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@7abaf368 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
15/05/2022 13:44:12 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 13:44:12 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 13:44:12 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 16:36:54 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 13760 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 16:36:54 INFO  - The following profiles are active: dev
15/05/2022 16:36:58 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 16:36:58 INFO  - Finished Spring Data repository scanning in 162 ms. Found 14 JPA repository interfaces.
15/05/2022 16:37:02 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$488117d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 16:37:02 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 16:37:02 INFO  - Starting service [Tomcat]
15/05/2022 16:37:02 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 16:37:02 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 16:37:02 INFO  - Root WebApplicationContext: initialization completed in 8502 ms
15/05/2022 16:37:02 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 16:37:02 INFO  - HikariPool-1 - Starting...
15/05/2022 16:37:03 INFO  - HikariPool-1 - Start completed.
15/05/2022 16:37:03 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 16:37:03 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 16:37:03 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 16:37:03 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 16:37:07 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 16:37:07 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 16:37:08 INFO  - readPublicKey: dev_public.key
15/05/2022 16:37:09 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 16:37:09 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 16:37:09 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 16:37:09 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 16:37:09 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 16:37:09 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 16:37:09 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 16:37:09 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 16:37:09 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 16:37:09 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 16:37:09 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 16:37:09 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 16:37:09 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 16:37:09 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 16:37:09 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 16:37:09 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 16:37:09 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 16:37:09 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@65820758, org.springframework.security.web.context.SecurityContextPersistenceFilter@680410ec, org.springframework.security.web.header.HeaderWriterFilter@51f26df9, org.springframework.web.filter.CorsFilter@555774c7, org.springframework.security.web.authentication.logout.LogoutFilter@740639ba, com.business.authencation.JwtAuthenticationFilter@39d06cd9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@147058d0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4d0ad526, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4426536a, org.springframework.security.web.session.SessionManagementFilter@227a79e5, org.springframework.security.web.access.ExceptionTranslationFilter@4412ac1a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@f442b41]
15/05/2022 16:37:10 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 16:37:10 INFO  - Started BusinessApplication in 17.548 seconds (JVM running for 19.718)
15/05/2022 16:37:10 INFO  - Account management already exsit.
15/05/2022 16:37:11 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 16:56:49 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 16:56:49 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 16:56:49 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 17:04:51 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 11228 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 17:04:51 INFO  - The following profiles are active: dev
15/05/2022 17:04:55 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 17:04:55 INFO  - Finished Spring Data repository scanning in 185 ms. Found 14 JPA repository interfaces.
15/05/2022 17:04:56 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$ec6265a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 17:04:56 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 17:04:56 INFO  - Starting service [Tomcat]
15/05/2022 17:04:56 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 17:04:56 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 17:04:56 INFO  - Root WebApplicationContext: initialization completed in 5087 ms
15/05/2022 17:04:57 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 17:04:57 INFO  - HikariPool-1 - Starting...
15/05/2022 17:04:57 INFO  - HikariPool-1 - Start completed.
15/05/2022 17:04:57 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 17:04:57 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 17:04:57 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 17:04:57 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 17:05:01 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 17:05:01 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 17:05:02 INFO  - readPublicKey: dev_public.key
15/05/2022 17:05:03 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 17:05:04 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 17:05:04 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 17:05:04 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 17:05:04 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 17:05:04 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 17:05:04 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 17:05:04 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 17:05:04 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 17:05:04 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 17:05:04 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 17:05:04 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 17:05:04 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 17:05:04 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 17:05:04 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 17:05:04 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 17:05:04 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 17:05:04 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@17d745ae, org.springframework.security.web.context.SecurityContextPersistenceFilter@15b8487f, org.springframework.security.web.header.HeaderWriterFilter@481b276c, org.springframework.web.filter.CorsFilter@787aa9f1, org.springframework.security.web.authentication.logout.LogoutFilter@5f9b21a1, com.business.authencation.JwtAuthenticationFilter@1cbe3497, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@10a479fe, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@56c92651, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5d63295e, org.springframework.security.web.session.SessionManagementFilter@35019e56, org.springframework.security.web.access.ExceptionTranslationFilter@11c885a6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5cf24f99]
15/05/2022 17:05:04 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 17:05:05 INFO  - Started BusinessApplication in 14.98 seconds (JVM running for 17.133)
15/05/2022 17:05:05 INFO  - Account management already exsit.
15/05/2022 17:05:06 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 17:07:22 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 17:07:22 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 17:07:22 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 17:07:29 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 14796 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 17:07:29 INFO  - The following profiles are active: dev
15/05/2022 17:07:31 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 17:07:32 INFO  - Finished Spring Data repository scanning in 101 ms. Found 14 JPA repository interfaces.
15/05/2022 17:07:32 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$2042b82f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 17:07:33 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 17:07:33 INFO  - Starting service [Tomcat]
15/05/2022 17:07:33 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 17:07:33 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 17:07:33 INFO  - Root WebApplicationContext: initialization completed in 3741 ms
15/05/2022 17:07:33 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 17:07:33 INFO  - HikariPool-1 - Starting...
15/05/2022 17:07:33 INFO  - HikariPool-1 - Start completed.
15/05/2022 17:07:34 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 17:07:34 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 17:07:34 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 17:07:34 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 17:07:38 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 17:07:38 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 17:07:39 INFO  - readPublicKey: dev_public.key
15/05/2022 17:07:40 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 17:07:41 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 17:07:41 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 17:07:41 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 17:07:41 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 17:07:41 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 17:07:41 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 17:07:41 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 17:07:41 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 17:07:41 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 17:07:41 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 17:07:41 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 17:07:41 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 17:07:41 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 17:07:41 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 17:07:41 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 17:07:41 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 17:07:41 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@537762d7, org.springframework.security.web.context.SecurityContextPersistenceFilter@38be950e, org.springframework.security.web.header.HeaderWriterFilter@23b89195, org.springframework.web.filter.CorsFilter@6f06b73a, org.springframework.security.web.authentication.logout.LogoutFilter@9def6d, com.business.authencation.JwtAuthenticationFilter@73b77d07, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@67367175, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5643c4b4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@196f7dfd, org.springframework.security.web.session.SessionManagementFilter@56005b40, org.springframework.security.web.access.ExceptionTranslationFilter@38d5f5d5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5ace491]
15/05/2022 17:07:42 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 17:07:42 INFO  - Started BusinessApplication in 13.717 seconds (JVM running for 15.026)
15/05/2022 17:07:43 INFO  - Account management already exsit.
15/05/2022 17:07:43 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 17:08:12 ERROR - errorHoanhtranh1 - POST 0:0:0:0:0:0:0:1:19010/business/follow/list-follow - Parameter value [0] did not match expected type [java.lang.Integer (n/a)]; nested exception is java.lang.IllegalArgumentException: Parameter value [0] did not match expected type [java.lang.Integer (n/a)]
15/05/2022 17:08:32 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 17:08:32 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 17:08:32 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 17:08:39 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 11700 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 17:08:39 INFO  - The following profiles are active: dev
15/05/2022 17:08:42 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 17:08:42 INFO  - Finished Spring Data repository scanning in 96 ms. Found 14 JPA repository interfaces.
15/05/2022 17:08:43 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$144fea18] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 17:08:43 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 17:08:43 INFO  - Starting service [Tomcat]
15/05/2022 17:08:43 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 17:08:43 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 17:08:43 INFO  - Root WebApplicationContext: initialization completed in 3812 ms
15/05/2022 17:08:44 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 17:08:44 INFO  - HikariPool-1 - Starting...
15/05/2022 17:08:44 INFO  - HikariPool-1 - Start completed.
15/05/2022 17:08:44 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 17:08:44 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 17:08:44 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 17:08:44 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 17:08:48 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 17:08:48 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 17:08:49 INFO  - readPublicKey: dev_public.key
15/05/2022 17:08:50 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 17:08:50 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 17:08:50 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 17:08:50 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 17:08:50 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 17:08:50 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 17:08:50 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 17:08:50 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 17:08:50 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 17:08:50 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 17:08:50 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 17:08:50 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 17:08:50 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 17:08:50 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 17:08:50 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 17:08:50 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 17:08:50 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 17:08:50 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@70787658, org.springframework.security.web.context.SecurityContextPersistenceFilter@5eef570, org.springframework.security.web.header.HeaderWriterFilter@598dca0a, org.springframework.web.filter.CorsFilter@43209a20, org.springframework.security.web.authentication.logout.LogoutFilter@69da07ff, com.business.authencation.JwtAuthenticationFilter@79ee7d2e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@42334d07, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7f086b45, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@618439c9, org.springframework.security.web.session.SessionManagementFilter@4add8b8d, org.springframework.security.web.access.ExceptionTranslationFilter@400b4dd5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@15b8487f]
15/05/2022 17:08:51 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 17:08:51 INFO  - Started BusinessApplication in 12.222 seconds (JVM running for 13.858)
15/05/2022 17:08:51 INFO  - Account management already exsit.
15/05/2022 17:08:51 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 17:09:41 ERROR - errorHoanhtranh1 - POST 0:0:0:0:0:0:0:1:19010/business/follow/list-follow - Named parameter not bound : isDelete; nested exception is org.hibernate.QueryException: Named parameter not bound : isDelete
15/05/2022 17:10:01 ERROR - errorHoanhtranh1 - POST 0:0:0:0:0:0:0:1:19010/business/follow/list-follow - Named parameter not bound : isDelete; nested exception is org.hibernate.QueryException: Named parameter not bound : isDelete
15/05/2022 17:10:37 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 17:10:37 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 17:10:37 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 17:10:48 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 14224 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 17:10:48 INFO  - The following profiles are active: dev
15/05/2022 17:10:51 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 17:10:51 INFO  - Finished Spring Data repository scanning in 129 ms. Found 14 JPA repository interfaces.
15/05/2022 17:10:52 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$6ddf3c66] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 17:10:52 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 17:10:52 INFO  - Starting service [Tomcat]
15/05/2022 17:10:52 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 17:10:52 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 17:10:52 INFO  - Root WebApplicationContext: initialization completed in 4231 ms
15/05/2022 17:10:53 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 17:10:53 INFO  - HikariPool-1 - Starting...
15/05/2022 17:10:53 INFO  - HikariPool-1 - Start completed.
15/05/2022 17:10:53 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 17:10:53 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 17:10:53 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 17:10:53 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 17:10:57 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 17:10:57 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 17:10:58 INFO  - readPublicKey: dev_public.key
15/05/2022 17:10:59 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 17:11:00 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 17:11:00 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 17:11:00 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 17:11:00 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 17:11:00 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 17:11:00 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 17:11:00 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 17:11:00 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 17:11:00 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 17:11:00 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 17:11:00 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 17:11:00 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 17:11:00 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 17:11:00 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 17:11:00 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 17:11:00 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 17:11:00 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@61902ae5, org.springframework.security.web.context.SecurityContextPersistenceFilter@43209a20, org.springframework.security.web.header.HeaderWriterFilter@3d1cb317, org.springframework.web.filter.CorsFilter@485fe2cd, org.springframework.security.web.authentication.logout.LogoutFilter@4b7c4e0e, com.business.authencation.JwtAuthenticationFilter@6cb84986, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@769c4312, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7e821499, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4a645ebb, org.springframework.security.web.session.SessionManagementFilter@2cc76912, org.springframework.security.web.access.ExceptionTranslationFilter@6a837740, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@36bc3c49]
15/05/2022 17:11:00 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 17:11:01 INFO  - Started BusinessApplication in 13.469 seconds (JVM running for 15.733)
15/05/2022 17:11:01 INFO  - Account management already exsit.
15/05/2022 17:11:01 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 17:17:51 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 17:17:51 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 17:17:51 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 17:18:02 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 9420 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 17:18:02 INFO  - The following profiles are active: dev
15/05/2022 17:18:06 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 17:18:06 INFO  - Finished Spring Data repository scanning in 94 ms. Found 14 JPA repository interfaces.
15/05/2022 17:18:06 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$edd5f5ad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 17:18:07 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 17:18:07 INFO  - Starting service [Tomcat]
15/05/2022 17:18:07 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 17:18:07 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 17:18:07 INFO  - Root WebApplicationContext: initialization completed in 4310 ms
15/05/2022 17:18:07 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 17:18:07 INFO  - HikariPool-1 - Starting...
15/05/2022 17:18:07 INFO  - HikariPool-1 - Start completed.
15/05/2022 17:18:07 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 17:18:07 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 17:18:08 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 17:18:08 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 17:18:12 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 17:18:12 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 17:18:12 INFO  - readPublicKey: dev_public.key
15/05/2022 17:18:13 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 17:18:14 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 17:18:14 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 17:18:14 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 17:18:14 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 17:18:14 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 17:18:14 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 17:18:14 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 17:18:14 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 17:18:14 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 17:18:14 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 17:18:14 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 17:18:14 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 17:18:14 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 17:18:14 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 17:18:14 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 17:18:14 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 17:18:14 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@685d9816, org.springframework.security.web.context.SecurityContextPersistenceFilter@1728a3fa, org.springframework.security.web.header.HeaderWriterFilter@2a3e1e53, org.springframework.web.filter.CorsFilter@4d225170, org.springframework.security.web.authentication.logout.LogoutFilter@325a7c9, com.business.authencation.JwtAuthenticationFilter@40bf2ead, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5e206acb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@53633321, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3f6edaf8, org.springframework.security.web.session.SessionManagementFilter@7d72f5a9, org.springframework.security.web.access.ExceptionTranslationFilter@4f9e42c4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@78500fc9]
15/05/2022 17:18:15 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 17:18:15 INFO  - Started BusinessApplication in 13.505 seconds (JVM running for 15.146)
15/05/2022 17:18:15 INFO  - Account management already exsit.
15/05/2022 17:18:16 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 17:21:50 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 17:21:50 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 17:21:50 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 17:21:58 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 5204 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 17:21:58 INFO  - The following profiles are active: dev
15/05/2022 17:22:01 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 17:22:01 INFO  - Finished Spring Data repository scanning in 168 ms. Found 14 JPA repository interfaces.
15/05/2022 17:22:02 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$c0b1836b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 17:22:02 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 17:22:02 INFO  - Starting service [Tomcat]
15/05/2022 17:22:02 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 17:22:02 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 17:22:02 INFO  - Root WebApplicationContext: initialization completed in 4034 ms
15/05/2022 17:22:03 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 17:22:03 INFO  - HikariPool-1 - Starting...
15/05/2022 17:22:03 INFO  - HikariPool-1 - Start completed.
15/05/2022 17:22:03 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 17:22:03 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 17:22:03 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 17:22:03 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 17:22:07 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 17:22:07 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 17:22:08 INFO  - readPublicKey: dev_public.key
15/05/2022 17:22:09 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 17:22:09 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 17:22:09 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 17:22:09 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 17:22:09 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 17:22:09 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 17:22:09 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 17:22:09 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 17:22:09 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 17:22:09 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 17:22:09 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 17:22:09 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 17:22:09 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 17:22:09 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 17:22:09 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 17:22:09 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 17:22:09 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 17:22:09 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@180e1754, org.springframework.security.web.context.SecurityContextPersistenceFilter@71c9e0a4, org.springframework.security.web.header.HeaderWriterFilter@7d440b1f, org.springframework.web.filter.CorsFilter@3ea5f324, org.springframework.security.web.authentication.logout.LogoutFilter@425979db, com.business.authencation.JwtAuthenticationFilter@b234301, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@20f8bc45, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7b320f0d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b9b7370, org.springframework.security.web.session.SessionManagementFilter@8aedeb4, org.springframework.security.web.access.ExceptionTranslationFilter@2b16efeb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6586b4e3]
15/05/2022 17:22:10 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 17:22:10 INFO  - Started BusinessApplication in 12.663 seconds (JVM running for 14.732)
15/05/2022 17:22:10 INFO  - Account management already exsit.
15/05/2022 17:22:11 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 17:25:10 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 17:25:10 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 17:25:10 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 17:25:18 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 320 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 17:25:18 INFO  - The following profiles are active: dev
15/05/2022 17:25:21 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 17:25:21 INFO  - Finished Spring Data repository scanning in 103 ms. Found 14 JPA repository interfaces.
15/05/2022 17:25:22 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$50b8bfce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 17:25:22 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 17:25:22 INFO  - Starting service [Tomcat]
15/05/2022 17:25:22 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 17:25:22 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 17:25:22 INFO  - Root WebApplicationContext: initialization completed in 3721 ms
15/05/2022 17:25:22 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 17:25:22 INFO  - HikariPool-1 - Starting...
15/05/2022 17:25:22 INFO  - HikariPool-1 - Start completed.
15/05/2022 17:25:23 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 17:25:23 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 17:25:23 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 17:25:23 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 17:25:27 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 17:25:27 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 17:25:28 INFO  - readPublicKey: dev_public.key
15/05/2022 17:25:29 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 17:25:29 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 17:25:29 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 17:25:29 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 17:25:29 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 17:25:29 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 17:25:29 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 17:25:29 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 17:25:29 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 17:25:29 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 17:25:29 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 17:25:29 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 17:25:29 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 17:25:29 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 17:25:29 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 17:25:29 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 17:25:29 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 17:25:29 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1531ec6, org.springframework.security.web.context.SecurityContextPersistenceFilter@1a7186ef, org.springframework.security.web.header.HeaderWriterFilter@3823d3d1, org.springframework.web.filter.CorsFilter@135d3ade, org.springframework.security.web.authentication.logout.LogoutFilter@2d45050c, com.business.authencation.JwtAuthenticationFilter@1aed9d7d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1227013b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1c9ff8fc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@54e9d42e, org.springframework.security.web.session.SessionManagementFilter@11ab8594, org.springframework.security.web.access.ExceptionTranslationFilter@ce5417f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@410126b8]
15/05/2022 17:25:29 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 17:25:30 INFO  - Started BusinessApplication in 12.02 seconds (JVM running for 13.89)
15/05/2022 17:25:30 INFO  - Account management already exsit.
15/05/2022 17:25:31 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 17:39:35 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 17:39:35 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 17:39:35 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 17:39:43 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 15824 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 17:39:43 INFO  - The following profiles are active: dev
15/05/2022 17:39:45 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 17:39:45 INFO  - Finished Spring Data repository scanning in 93 ms. Found 14 JPA repository interfaces.
15/05/2022 17:39:46 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$4bca39a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 17:39:46 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 17:39:46 INFO  - Starting service [Tomcat]
15/05/2022 17:39:46 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 17:39:46 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 17:39:46 INFO  - Root WebApplicationContext: initialization completed in 3234 ms
15/05/2022 17:39:46 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 17:39:46 INFO  - HikariPool-1 - Starting...
15/05/2022 17:39:47 INFO  - HikariPool-1 - Start completed.
15/05/2022 17:39:47 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 17:39:47 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 17:39:47 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 17:39:48 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 17:39:52 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 17:39:52 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 17:39:53 INFO  - readPublicKey: dev_public.key
15/05/2022 17:39:54 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 17:39:54 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 17:39:54 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 17:39:54 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 17:39:54 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 17:39:54 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 17:39:54 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 17:39:54 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 17:39:54 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 17:39:54 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 17:39:54 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 17:39:54 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 17:39:54 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 17:39:54 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 17:39:54 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 17:39:54 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 17:39:54 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 17:39:55 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@764dfaf3, org.springframework.security.web.context.SecurityContextPersistenceFilter@273ea660, org.springframework.security.web.header.HeaderWriterFilter@5f76d1a0, org.springframework.web.filter.CorsFilter@1bbdd4a9, org.springframework.security.web.authentication.logout.LogoutFilter@6a67e945, com.business.authencation.JwtAuthenticationFilter@584d9b19, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@79ba32b3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@51f26df9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2fce34e4, org.springframework.security.web.session.SessionManagementFilter@57bbdcf1, org.springframework.security.web.access.ExceptionTranslationFilter@2858d3d9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6cbac170]
15/05/2022 17:39:55 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 17:39:56 INFO  - Started BusinessApplication in 13.237 seconds (JVM running for 14.553)
15/05/2022 17:39:56 INFO  - Account management already exsit.
15/05/2022 17:39:57 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 17:47:42 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 17:47:42 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 17:47:42 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 17:47:53 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 14196 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 17:47:53 INFO  - The following profiles are active: dev
15/05/2022 17:47:55 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 17:47:55 INFO  - Finished Spring Data repository scanning in 99 ms. Found 14 JPA repository interfaces.
15/05/2022 17:47:56 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$880b9a8f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 17:47:56 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 17:47:56 INFO  - Starting service [Tomcat]
15/05/2022 17:47:56 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 17:47:56 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 17:47:56 INFO  - Root WebApplicationContext: initialization completed in 3729 ms
15/05/2022 17:47:57 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 17:47:57 INFO  - HikariPool-1 - Starting...
15/05/2022 17:47:57 INFO  - HikariPool-1 - Start completed.
15/05/2022 17:47:57 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 17:47:57 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 17:47:57 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 17:47:57 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 17:48:01 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 17:48:01 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 17:48:02 INFO  - readPublicKey: dev_public.key
15/05/2022 17:48:03 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 17:48:04 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 17:48:04 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 17:48:04 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 17:48:04 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 17:48:04 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 17:48:04 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 17:48:04 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 17:48:04 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 17:48:04 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 17:48:04 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 17:48:04 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 17:48:04 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 17:48:04 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 17:48:04 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 17:48:04 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 17:48:04 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 17:48:04 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5883f0d5, org.springframework.security.web.context.SecurityContextPersistenceFilter@7d2410af, org.springframework.security.web.header.HeaderWriterFilter@3ff264c, org.springframework.web.filter.CorsFilter@16139b0, org.springframework.security.web.authentication.logout.LogoutFilter@4270a134, com.business.authencation.JwtAuthenticationFilter@4e826e33, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7c039615, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@581c7611, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@37d4b676, org.springframework.security.web.session.SessionManagementFilter@3463d70a, org.springframework.security.web.access.ExceptionTranslationFilter@422f7081, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@25c66a5a]
15/05/2022 17:48:04 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 17:48:05 INFO  - Started BusinessApplication in 12.486 seconds (JVM running for 13.738)
15/05/2022 17:48:05 INFO  - Account management already exsit.
15/05/2022 17:48:05 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 17:50:14 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 17:50:14 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 17:50:14 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 17:50:24 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 13804 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 17:50:24 INFO  - The following profiles are active: dev
15/05/2022 17:50:26 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 17:50:26 INFO  - Finished Spring Data repository scanning in 117 ms. Found 14 JPA repository interfaces.
15/05/2022 17:50:27 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$8743eaee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 17:50:27 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 17:50:27 INFO  - Starting service [Tomcat]
15/05/2022 17:50:27 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 17:50:27 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 17:50:27 INFO  - Root WebApplicationContext: initialization completed in 3430 ms
15/05/2022 17:50:27 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 17:50:28 INFO  - HikariPool-1 - Starting...
15/05/2022 17:50:28 INFO  - HikariPool-1 - Start completed.
15/05/2022 17:50:28 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 17:50:28 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 17:50:28 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 17:50:28 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 17:50:32 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 17:50:32 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 17:50:33 INFO  - readPublicKey: dev_public.key
15/05/2022 17:50:34 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 17:50:34 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 17:50:34 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 17:50:34 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 17:50:34 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 17:50:34 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 17:50:34 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 17:50:34 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 17:50:34 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 17:50:34 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 17:50:34 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 17:50:34 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 17:50:34 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 17:50:34 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 17:50:34 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 17:50:34 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 17:50:34 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 17:50:34 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@18681121, org.springframework.security.web.context.SecurityContextPersistenceFilter@3d1cb317, org.springframework.security.web.header.HeaderWriterFilter@5f5b255e, org.springframework.web.filter.CorsFilter@38388db2, org.springframework.security.web.authentication.logout.LogoutFilter@7e8e2fc7, com.business.authencation.JwtAuthenticationFilter@47fb7dbb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2775dd2e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@10a479fe, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@78ffe38, org.springframework.security.web.session.SessionManagementFilter@6a837740, org.springframework.security.web.access.ExceptionTranslationFilter@1607278e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@69b96cd]
15/05/2022 17:50:35 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 17:50:35 INFO  - Started BusinessApplication in 11.887 seconds (JVM running for 13.655)
15/05/2022 17:50:35 INFO  - Account management already exsit.
15/05/2022 17:50:36 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 17:52:05 WARN  - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m6s733ms20µs).
15/05/2022 17:55:33 ERROR - error - POST 0:0:0:0:0:0:0:1:19010/business/account-managers/register - Validation failed for argument [0] in public synchronized org.springframework.http.ResponseEntity<?> com.business.Controller.AcountManagementAPI.create(com.core.model.account.UserRegisterDto) throws com.core.exception.BadRequestException,com.core.exception.PermissionException with 2 errors: [Field error in object 'userRegisterDto' on field 'fullName': rejected value [null]; codes [NotEmpty.userRegisterDto.fullName,NotEmpty.fullName,NotEmpty.java.lang.String,NotEmpty]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [userRegisterDto.fullName,fullName]; arguments []; default message [fullName]]; default message [Họ và tên không bỏ trống. ]] [Field error in object 'userRegisterDto' on field 'fullName': rejected value [null]; codes [NotNull.userRegisterDto.fullName,NotNull.fullName,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [userRegisterDto.fullName,fullName]; arguments []; default message [fullName]]; default message [Họ và tên không bỏ trống. ]] 
15/05/2022 17:55:58 ERROR - null
java.lang.NullPointerException: null
	at com.business.utilts.ApplicationUtils.getCurrentUser(ApplicationUtils.java:44)
	at com.business.services.impl.AcountManagementServiceImpl.isFollow(AcountManagementServiceImpl.java:427)
	at com.business.services.impl.AcountManagementServiceImpl.getUserByUser(AcountManagementServiceImpl.java:413)
	at com.business.services.impl.AcountManagementServiceImpl.createNewAccount(AcountManagementServiceImpl.java:214)
	at com.business.services.impl.AcountManagementServiceImpl$$FastClassBySpringCGLIB$$13ba1f05.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.business.services.impl.AcountManagementServiceImpl$$EnhancerBySpringCGLIB$$828251e5.createNewAccount(<generated>)
	at com.business.Controller.AcountManagementAPI.create(AcountManagementAPI.java:181)
	at com.business.Controller.AcountManagementAPI$$FastClassBySpringCGLIB$$3896358.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:123)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.business.Controller.AcountManagementAPI$$EnhancerBySpringCGLIB$$d707eabe.create(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at com.business.authencation.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:204)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
15/05/2022 17:55:58 ERROR - error - POST 0:0:0:0:0:0:0:1:19010/business/account-managers/register - null
15/05/2022 17:58:42 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 17:58:42 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 17:58:42 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 17:58:53 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 11672 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 17:58:53 INFO  - The following profiles are active: dev
15/05/2022 17:58:55 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 17:58:55 INFO  - Finished Spring Data repository scanning in 121 ms. Found 14 JPA repository interfaces.
15/05/2022 17:58:57 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$bbb6882] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 17:58:57 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 17:58:57 INFO  - Starting service [Tomcat]
15/05/2022 17:58:57 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 17:58:58 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 17:58:58 INFO  - Root WebApplicationContext: initialization completed in 4807 ms
15/05/2022 17:58:58 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 17:58:58 INFO  - HikariPool-1 - Starting...
15/05/2022 17:58:59 INFO  - HikariPool-1 - Start completed.
15/05/2022 17:58:59 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 17:58:59 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 17:58:59 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 17:58:59 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 17:59:03 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 17:59:03 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 17:59:04 INFO  - readPublicKey: dev_public.key
15/05/2022 17:59:05 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 17:59:06 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 17:59:06 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 17:59:06 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 17:59:06 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 17:59:06 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 17:59:06 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 17:59:06 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 17:59:06 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 17:59:06 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 17:59:06 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 17:59:06 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 17:59:06 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 17:59:06 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 17:59:06 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 17:59:06 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 17:59:06 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 17:59:06 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6b57ac6a, org.springframework.security.web.context.SecurityContextPersistenceFilter@19b6eefb, org.springframework.security.web.header.HeaderWriterFilter@9def6d, org.springframework.web.filter.CorsFilter@2ce01617, org.springframework.security.web.authentication.logout.LogoutFilter@5b1b1b10, com.business.authencation.JwtAuthenticationFilter@42491839, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7431ac04, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5672c056, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1b2af5ed, org.springframework.security.web.session.SessionManagementFilter@6b42829, org.springframework.security.web.access.ExceptionTranslationFilter@657e11b0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5db4e558]
15/05/2022 17:59:06 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 17:59:07 INFO  - Started BusinessApplication in 14.537 seconds (JVM running for 16.063)
15/05/2022 17:59:07 INFO  - Account management already exsit.
15/05/2022 17:59:07 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 17:59:34 ERROR - null
java.lang.NullPointerException: null
	at com.business.utilts.ApplicationUtils.isLogin(ApplicationUtils.java:54)
	at com.business.services.impl.AcountManagementServiceImpl.getUserByUser(AcountManagementServiceImpl.java:415)
	at com.business.services.impl.AcountManagementServiceImpl.createNewAccount(AcountManagementServiceImpl.java:216)
	at com.business.services.impl.AcountManagementServiceImpl$$FastClassBySpringCGLIB$$13ba1f05.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.business.services.impl.AcountManagementServiceImpl$$EnhancerBySpringCGLIB$$680d321a.createNewAccount(<generated>)
	at com.business.Controller.AcountManagementAPI.create(AcountManagementAPI.java:181)
	at com.business.Controller.AcountManagementAPI$$FastClassBySpringCGLIB$$3896358.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:123)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.business.Controller.AcountManagementAPI$$EnhancerBySpringCGLIB$$bc92caf3.create(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at com.business.authencation.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:204)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
15/05/2022 18:00:25 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 18:00:25 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 18:00:25 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 18:00:35 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 2684 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 18:00:35 INFO  - The following profiles are active: dev
15/05/2022 18:00:38 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 18:00:38 INFO  - Finished Spring Data repository scanning in 105 ms. Found 14 JPA repository interfaces.
15/05/2022 18:00:38 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$2d140133] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 18:00:39 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 18:00:39 INFO  - Starting service [Tomcat]
15/05/2022 18:00:39 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 18:00:39 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 18:00:39 INFO  - Root WebApplicationContext: initialization completed in 3472 ms
15/05/2022 18:00:39 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 18:00:39 INFO  - HikariPool-1 - Starting...
15/05/2022 18:00:39 INFO  - HikariPool-1 - Start completed.
15/05/2022 18:00:39 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 18:00:39 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 18:00:39 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 18:00:40 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 18:00:43 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 18:00:43 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 18:00:44 INFO  - readPublicKey: dev_public.key
15/05/2022 18:00:45 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 18:00:45 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 18:00:45 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 18:00:45 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 18:00:45 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 18:00:45 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 18:00:45 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 18:00:45 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 18:00:45 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 18:00:45 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 18:00:45 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 18:00:45 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 18:00:45 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 18:00:45 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 18:00:45 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 18:00:45 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 18:00:45 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 18:00:45 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@769c4312, org.springframework.security.web.context.SecurityContextPersistenceFilter@7d6406c8, org.springframework.security.web.header.HeaderWriterFilter@d2aa65d, org.springframework.web.filter.CorsFilter@45e5212f, org.springframework.security.web.authentication.logout.LogoutFilter@5c7ba702, com.business.authencation.JwtAuthenticationFilter@1a4dd83f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4a9d481b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6133a1b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2534229, org.springframework.security.web.session.SessionManagementFilter@641423eb, org.springframework.security.web.access.ExceptionTranslationFilter@1b38563a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7beb2da0]
15/05/2022 18:00:46 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 18:00:47 INFO  - Started BusinessApplication in 12.051 seconds (JVM running for 13.701)
15/05/2022 18:00:47 INFO  - Account management already exsit.
15/05/2022 18:00:47 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 18:01:14 ERROR - null
java.lang.NullPointerException: null
	at com.business.utilts.ApplicationUtils.isLogin(ApplicationUtils.java:54)
	at com.business.services.impl.AcountManagementServiceImpl.getUserByUser(AcountManagementServiceImpl.java:415)
	at com.business.services.impl.AcountManagementServiceImpl.createNewAccount(AcountManagementServiceImpl.java:216)
	at com.business.services.impl.AcountManagementServiceImpl$$FastClassBySpringCGLIB$$13ba1f05.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.business.services.impl.AcountManagementServiceImpl$$EnhancerBySpringCGLIB$$5db3209e.createNewAccount(<generated>)
	at com.business.Controller.AcountManagementAPI.create(AcountManagementAPI.java:181)
	at com.business.Controller.AcountManagementAPI$$FastClassBySpringCGLIB$$3896358.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:123)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.business.Controller.AcountManagementAPI$$EnhancerBySpringCGLIB$$b238b977.create(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at com.business.authencation.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:204)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
15/05/2022 18:05:41 ERROR - errorHoanhtranh1 - POST 0:0:0:0:0:0:0:1:19010/business/follow/add-follow - Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"])
15/05/2022 18:07:47 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 18:07:47 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 18:07:47 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 18:07:56 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 14012 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 18:07:56 INFO  - The following profiles are active: dev
15/05/2022 18:07:58 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 18:07:58 INFO  - Finished Spring Data repository scanning in 96 ms. Found 14 JPA repository interfaces.
15/05/2022 18:07:59 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$50514f01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 18:07:59 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 18:07:59 INFO  - Starting service [Tomcat]
15/05/2022 18:07:59 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 18:07:59 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 18:07:59 INFO  - Root WebApplicationContext: initialization completed in 3327 ms
15/05/2022 18:07:59 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 18:07:59 INFO  - HikariPool-1 - Starting...
15/05/2022 18:08:00 INFO  - HikariPool-1 - Start completed.
15/05/2022 18:08:00 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 18:08:00 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 18:08:00 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 18:08:00 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 18:08:04 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 18:08:04 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 18:08:05 INFO  - readPublicKey: dev_public.key
15/05/2022 18:08:07 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 18:08:07 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 18:08:07 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 18:08:07 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 18:08:07 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 18:08:07 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 18:08:07 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 18:08:07 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 18:08:07 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 18:08:07 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 18:08:07 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 18:08:07 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 18:08:07 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 18:08:07 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 18:08:07 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 18:08:07 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 18:08:07 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 18:08:07 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6be4686b, org.springframework.security.web.context.SecurityContextPersistenceFilter@67054b2e, org.springframework.security.web.header.HeaderWriterFilter@f32284d, org.springframework.web.filter.CorsFilter@7d440b1f, org.springframework.security.web.authentication.logout.LogoutFilter@6390f89c, com.business.authencation.JwtAuthenticationFilter@822e8a1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7a8ea, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@c49bc5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@769229cb, org.springframework.security.web.session.SessionManagementFilter@1606721f, org.springframework.security.web.access.ExceptionTranslationFilter@77f4742b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@680410ec]
15/05/2022 18:08:07 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 18:08:08 INFO  - Started BusinessApplication in 12.852 seconds (JVM running for 14.573)
15/05/2022 18:08:08 INFO  - Account management already exsit.
15/05/2022 18:08:09 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 18:15:00 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 18:15:00 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 18:15:00 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 18:15:07 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 7508 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 18:15:07 INFO  - The following profiles are active: dev
15/05/2022 18:15:11 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 18:15:11 INFO  - Finished Spring Data repository scanning in 249 ms. Found 14 JPA repository interfaces.
15/05/2022 18:15:12 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$942efd3d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 18:15:12 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 18:15:12 INFO  - Starting service [Tomcat]
15/05/2022 18:15:12 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 18:15:13 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 18:15:13 INFO  - Root WebApplicationContext: initialization completed in 5250 ms
15/05/2022 18:15:13 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 18:15:13 INFO  - HikariPool-1 - Starting...
15/05/2022 18:15:13 INFO  - HikariPool-1 - Start completed.
15/05/2022 18:15:13 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 18:15:13 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 18:15:14 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 18:15:14 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 18:15:18 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 18:15:18 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 18:15:18 INFO  - readPublicKey: dev_public.key
15/05/2022 18:15:20 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 18:15:20 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 18:15:20 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 18:15:20 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 18:15:20 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 18:15:20 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 18:15:20 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 18:15:20 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 18:15:20 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 18:15:20 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 18:15:20 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 18:15:20 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 18:15:20 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 18:15:20 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 18:15:20 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 18:15:20 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 18:15:20 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 18:15:20 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@fbcba93, org.springframework.security.web.context.SecurityContextPersistenceFilter@2a3e1e53, org.springframework.security.web.header.HeaderWriterFilter@43a1205c, org.springframework.web.filter.CorsFilter@39e347c, org.springframework.security.web.authentication.logout.LogoutFilter@3463d70a, com.business.authencation.JwtAuthenticationFilter@387f53cf, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@18f28f20, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3fb75c24, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2169596d, org.springframework.security.web.session.SessionManagementFilter@4f9e42c4, org.springframework.security.web.access.ExceptionTranslationFilter@569ac51e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@38f9e69b]
15/05/2022 18:15:20 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 18:15:21 INFO  - Started BusinessApplication in 14.719 seconds (JVM running for 16.307)
15/05/2022 18:15:21 INFO  - Account management already exsit.
15/05/2022 18:15:22 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 18:20:44 ERROR - errorHoanhtranh1 - POST 0:0:0:0:0:0:0:1:19010/business/post/search - could not initialize proxy [com.core.entity.User#1] - no Session
15/05/2022 18:21:36 ERROR - errorHoanhtranh1 - POST 0:0:0:0:0:0:0:1:19010/business/post/search - could not initialize proxy [com.core.entity.User#1] - no Session
15/05/2022 18:22:21 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 18:22:21 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 18:22:21 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 18:22:28 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 15976 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 18:22:28 INFO  - The following profiles are active: dev
15/05/2022 18:22:31 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 18:22:31 INFO  - Finished Spring Data repository scanning in 112 ms. Found 14 JPA repository interfaces.
15/05/2022 18:22:32 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$45baa58b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 18:22:32 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 18:22:32 INFO  - Starting service [Tomcat]
15/05/2022 18:22:32 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 18:22:33 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 18:22:33 INFO  - Root WebApplicationContext: initialization completed in 4187 ms
15/05/2022 18:22:33 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 18:22:33 INFO  - HikariPool-1 - Starting...
15/05/2022 18:22:33 INFO  - HikariPool-1 - Start completed.
15/05/2022 18:22:33 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 18:22:33 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 18:22:33 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 18:22:34 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 18:22:38 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 18:22:38 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 18:22:38 INFO  - readPublicKey: dev_public.key
15/05/2022 18:22:39 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 18:22:40 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 18:22:40 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 18:22:40 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 18:22:40 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 18:22:40 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 18:22:40 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 18:22:40 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 18:22:40 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 18:22:40 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 18:22:40 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 18:22:40 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 18:22:40 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 18:22:40 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 18:22:40 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 18:22:40 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 18:22:40 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 18:22:40 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5c1ec792, org.springframework.security.web.context.SecurityContextPersistenceFilter@3763c93b, org.springframework.security.web.header.HeaderWriterFilter@25ce4114, org.springframework.web.filter.CorsFilter@6e4731d5, org.springframework.security.web.authentication.logout.LogoutFilter@25c7713e, com.business.authencation.JwtAuthenticationFilter@22ecee76, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4884d951, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@67367175, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7111dd38, org.springframework.security.web.session.SessionManagementFilter@413e4756, org.springframework.security.web.access.ExceptionTranslationFilter@78698291, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4b6f7369]
15/05/2022 18:22:40 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 18:22:41 INFO  - Started BusinessApplication in 12.821 seconds (JVM running for 14.289)
15/05/2022 18:22:41 INFO  - Account management already exsit.
15/05/2022 18:22:41 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 18:23:10 ERROR - errorHoanhtranh1 - POST 0:0:0:0:0:0:0:1:19010/business/post/search - failed to lazily initialize a collection of role: com.core.entity.User.followingList, could not initialize proxy - no Session
15/05/2022 18:24:03 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 18:24:03 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 18:24:03 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 18:24:09 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 16420 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 18:24:09 INFO  - The following profiles are active: dev
15/05/2022 18:24:12 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 18:24:12 INFO  - Finished Spring Data repository scanning in 109 ms. Found 14 JPA repository interfaces.
15/05/2022 18:24:13 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$bd03a9a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 18:24:14 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 18:24:14 INFO  - Starting service [Tomcat]
15/05/2022 18:24:14 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 18:24:14 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 18:24:14 INFO  - Root WebApplicationContext: initialization completed in 4182 ms
15/05/2022 18:24:14 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 18:24:14 INFO  - HikariPool-1 - Starting...
15/05/2022 18:24:14 INFO  - HikariPool-1 - Start completed.
15/05/2022 18:24:15 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 18:24:15 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 18:24:15 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 18:24:15 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 18:24:19 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 18:24:19 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 18:24:20 INFO  - readPublicKey: dev_public.key
15/05/2022 18:24:21 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 18:24:21 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 18:24:21 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 18:24:21 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 18:24:21 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 18:24:21 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 18:24:21 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 18:24:21 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 18:24:21 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 18:24:21 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 18:24:21 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 18:24:21 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 18:24:21 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 18:24:21 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 18:24:21 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 18:24:21 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 18:24:21 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 18:24:21 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@16139b0, org.springframework.security.web.context.SecurityContextPersistenceFilter@5672c056, org.springframework.security.web.header.HeaderWriterFilter@42c4f29c, org.springframework.web.filter.CorsFilter@37d4b676, org.springframework.security.web.authentication.logout.LogoutFilter@3d4d5af7, com.business.authencation.JwtAuthenticationFilter@4bb4c147, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3d69bbe3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@248cc861, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6801536, org.springframework.security.web.session.SessionManagementFilter@66a4e1ef, org.springframework.security.web.access.ExceptionTranslationFilter@5ed4796f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@9ba905b]
15/05/2022 18:24:22 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 18:24:22 INFO  - Started BusinessApplication in 13.486 seconds (JVM running for 14.785)
15/05/2022 18:24:22 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 18:24:22 INFO  - Account management already exsit.
15/05/2022 18:24:26 ERROR - errorHoanhtranh1 - POST 0:0:0:0:0:0:0:1:19010/business/post/search - failed to lazily initialize a collection of role: com.core.entity.User.followingList, could not initialize proxy - no Session
15/05/2022 18:24:46 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 18:24:46 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 18:24:46 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 18:24:52 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 2448 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 18:24:52 INFO  - The following profiles are active: dev
15/05/2022 18:24:54 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 18:24:54 INFO  - Finished Spring Data repository scanning in 102 ms. Found 14 JPA repository interfaces.
15/05/2022 18:24:55 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$94dedbbf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 18:24:55 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 18:24:55 INFO  - Starting service [Tomcat]
15/05/2022 18:24:55 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 18:24:55 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 18:24:55 INFO  - Root WebApplicationContext: initialization completed in 3389 ms
15/05/2022 18:24:55 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 18:24:56 INFO  - HikariPool-1 - Starting...
15/05/2022 18:24:56 INFO  - HikariPool-1 - Start completed.
15/05/2022 18:24:56 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 18:24:56 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 18:24:56 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 18:24:56 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 18:25:00 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 18:25:00 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 18:25:01 INFO  - readPublicKey: dev_public.key
15/05/2022 18:25:02 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 18:25:02 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 18:25:02 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 18:25:02 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 18:25:02 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 18:25:02 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 18:25:02 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 18:25:02 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 18:25:02 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 18:25:02 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 18:25:02 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 18:25:02 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 18:25:02 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 18:25:02 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 18:25:02 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 18:25:02 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 18:25:02 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 18:25:02 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@38b88037, org.springframework.security.web.context.SecurityContextPersistenceFilter@3dbdc020, org.springframework.security.web.header.HeaderWriterFilter@425979db, org.springframework.web.filter.CorsFilter@122c8b64, org.springframework.security.web.authentication.logout.LogoutFilter@4884d951, com.business.authencation.JwtAuthenticationFilter@6a3a3b93, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@38fa6da9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@647afb93, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@606b9417, org.springframework.security.web.session.SessionManagementFilter@21e860cd, org.springframework.security.web.access.ExceptionTranslationFilter@45e5212f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@61a4a71c]
15/05/2022 18:25:03 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 18:25:03 INFO  - Started BusinessApplication in 11.736 seconds (JVM running for 13.014)
15/05/2022 18:25:03 INFO  - Account management already exsit.
15/05/2022 18:25:04 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 18:25:12 ERROR - errorHoanhtranh1 - POST 0:0:0:0:0:0:0:1:19010/business/post/search - could not initialize proxy [com.core.entity.User#1] - no Session
15/05/2022 18:27:47 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 18:27:47 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 18:27:47 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 18:27:55 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 14312 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 18:27:55 INFO  - The following profiles are active: dev
15/05/2022 18:27:58 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 18:27:59 INFO  - Finished Spring Data repository scanning in 148 ms. Found 14 JPA repository interfaces.
15/05/2022 18:28:00 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$144fea18] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 18:28:00 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 18:28:00 INFO  - Starting service [Tomcat]
15/05/2022 18:28:00 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 18:28:00 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 18:28:00 INFO  - Root WebApplicationContext: initialization completed in 4933 ms
15/05/2022 18:28:00 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 18:28:00 INFO  - HikariPool-1 - Starting...
15/05/2022 18:28:01 INFO  - HikariPool-1 - Start completed.
15/05/2022 18:28:01 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 18:28:01 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 18:28:01 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 18:28:01 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 18:28:06 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 18:28:06 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 18:28:06 INFO  - readPublicKey: dev_public.key
15/05/2022 18:28:07 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 18:28:08 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 18:28:08 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 18:28:08 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 18:28:08 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 18:28:08 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 18:28:08 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 18:28:08 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 18:28:08 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 18:28:08 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 18:28:08 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 18:28:08 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 18:28:08 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 18:28:08 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 18:28:08 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 18:28:08 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 18:28:08 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 18:28:08 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2ee3549e, org.springframework.security.web.context.SecurityContextPersistenceFilter@273ea660, org.springframework.security.web.header.HeaderWriterFilter@5f76d1a0, org.springframework.web.filter.CorsFilter@14e8a173, org.springframework.security.web.authentication.logout.LogoutFilter@6a67e945, com.business.authencation.JwtAuthenticationFilter@2b4bcd6e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@79ba32b3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@51f26df9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@764dfaf3, org.springframework.security.web.session.SessionManagementFilter@57bbdcf1, org.springframework.security.web.access.ExceptionTranslationFilter@2858d3d9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2ae7ee25]
15/05/2022 18:28:08 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 18:28:09 INFO  - Started BusinessApplication in 14.144 seconds (JVM running for 16.024)
15/05/2022 18:28:09 INFO  - Account management already exsit.
15/05/2022 18:28:09 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 18:30:22 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 18:30:22 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 18:30:22 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 18:30:29 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 6660 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 18:30:29 INFO  - The following profiles are active: dev
15/05/2022 18:30:31 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 18:30:32 INFO  - Finished Spring Data repository scanning in 121 ms. Found 14 JPA repository interfaces.
15/05/2022 18:30:33 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$232dfa3b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 18:30:33 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 18:30:33 INFO  - Starting service [Tomcat]
15/05/2022 18:30:33 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 18:30:33 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 18:30:33 INFO  - Root WebApplicationContext: initialization completed in 4368 ms
15/05/2022 18:30:34 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 18:30:34 INFO  - HikariPool-1 - Starting...
15/05/2022 18:30:34 INFO  - HikariPool-1 - Start completed.
15/05/2022 18:30:34 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 18:30:34 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 18:30:34 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 18:30:34 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 18:30:38 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 18:30:38 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 18:30:39 INFO  - readPublicKey: dev_public.key
15/05/2022 18:30:40 ERROR - <AST>:1:73: unexpected AST node: :
15/05/2022 18:30:40 ERROR - <AST>:1:73: unexpected AST node: :
antlr.NoViableAltException: unexpected AST node: :
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.path(HqlSqlBaseWalker.java:977)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromElement(HqlSqlBaseWalker.java:3713)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromElementList(HqlSqlBaseWalker.java:3654)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromClause(HqlSqlBaseWalker.java:737)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:593)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.collectionFunctionOrSubselect(HqlSqlBaseWalker.java:5000)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4695)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2166)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2141)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2116)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2094)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2091)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:832)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:626)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:330)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:278)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:276)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:192)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:144)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:113)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:73)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:162)
	at org.hibernate.internal.AbstractSharedSessionContract.getQueryPlan(AbstractSharedSessionContract.java:613)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:725)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:114)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy161.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:87)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:63)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:76)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:56)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:146)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:216)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1051)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.util.Optional.map(Optional.java:215)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.business.BusinessApplication.main(BusinessApplication.java:17)
15/05/2022 18:30:40 WARN  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentController': Unsatisfied dependency expressed through field 'commentService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentServiceImpl': Unsatisfied dependency expressed through field 'postRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'postRepository' defined in com.core.repository.Post.PostRepository defined in @EnableJpaRepositories declared on BusinessApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)! Reason: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!
15/05/2022 18:30:40 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 18:30:40 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 18:30:40 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 18:30:40 INFO  - Stopping service [Tomcat]
15/05/2022 18:30:40 INFO  - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
15/05/2022 18:30:40 ERROR - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentController': Unsatisfied dependency expressed through field 'commentService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentServiceImpl': Unsatisfied dependency expressed through field 'postRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'postRepository' defined in com.core.repository.Post.PostRepository defined in @EnableJpaRepositories declared on BusinessApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)! Reason: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.business.BusinessApplication.main(BusinessApplication.java:17)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentServiceImpl': Unsatisfied dependency expressed through field 'postRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'postRepository' defined in com.core.repository.Post.PostRepository defined in @EnableJpaRepositories declared on BusinessApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)! Reason: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'postRepository' defined in com.core.repository.Post.PostRepository defined in @EnableJpaRepositories declared on BusinessApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)! Reason: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 34 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)! Reason: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1051)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.util.Optional.map(Optional.java:215)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:93)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:63)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:76)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:56)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:146)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:216)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 66 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.hql.internal.ast.QuerySyntaxException: ??? is not mapped [select p from com.core.entity.Post p where (p.isDelete = :isDelete)And (:followingListUName is empty or p.createdBy in :followingListUName )AND ( :keyword is null or p.title =:keyword or p.content =:keyword)]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:138)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:734)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:114)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy161.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:87)
	... 73 common frames omitted
Caused by: org.hibernate.hql.internal.ast.QuerySyntaxException: ??? is not mapped [select p from com.core.entity.Post p where (p.isDelete = :isDelete)And (:followingListUName is empty or p.createdBy in :followingListUName )AND ( :keyword is null or p.title =:keyword or p.content =:keyword)]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.generateQueryException(QuerySyntaxException.java:79)
	at org.hibernate.QueryException.wrapWithQueryString(QueryException.java:103)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:220)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:144)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:113)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:73)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:162)
	at org.hibernate.internal.AbstractSharedSessionContract.getQueryPlan(AbstractSharedSessionContract.java:613)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:725)
	... 80 common frames omitted
Caused by: org.hibernate.hql.internal.ast.QuerySyntaxException: ??? is not mapped
	at org.hibernate.hql.internal.ast.util.SessionFactoryHelper.requireClassPersister(SessionFactoryHelper.java:169)
	at org.hibernate.hql.internal.ast.tree.FromElementFactory.addFromElement(FromElementFactory.java:91)
	at org.hibernate.hql.internal.ast.tree.FromClause.addFromElement(FromClause.java:77)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.createFromElement(HqlSqlWalker.java:333)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromElement(HqlSqlBaseWalker.java:3765)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromElementList(HqlSqlBaseWalker.java:3654)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromClause(HqlSqlBaseWalker.java:737)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:593)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.collectionFunctionOrSubselect(HqlSqlBaseWalker.java:5000)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4695)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2166)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2141)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2116)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2094)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2091)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:832)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:626)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:330)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:278)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:276)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:192)
	... 86 common frames omitted
15/05/2022 18:31:52 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 6208 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 18:31:52 INFO  - The following profiles are active: dev
15/05/2022 18:31:55 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 18:31:55 INFO  - Finished Spring Data repository scanning in 110 ms. Found 14 JPA repository interfaces.
15/05/2022 18:31:56 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$fb06fa77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 18:31:56 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 18:31:56 INFO  - Starting service [Tomcat]
15/05/2022 18:31:56 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 18:31:56 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 18:31:56 INFO  - Root WebApplicationContext: initialization completed in 3901 ms
15/05/2022 18:31:57 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 18:31:57 INFO  - HikariPool-1 - Starting...
15/05/2022 18:31:57 INFO  - HikariPool-1 - Start completed.
15/05/2022 18:31:58 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 18:31:58 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 18:31:58 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 18:31:58 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 18:32:02 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 18:32:02 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 18:32:03 INFO  - readPublicKey: dev_public.key
15/05/2022 18:32:03 ERROR - <AST>:1:73: unexpected AST node: :
15/05/2022 18:32:03 ERROR - <AST>:1:73: unexpected AST node: :
antlr.NoViableAltException: unexpected AST node: :
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.path(HqlSqlBaseWalker.java:977)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromElement(HqlSqlBaseWalker.java:3713)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromElementList(HqlSqlBaseWalker.java:3654)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromClause(HqlSqlBaseWalker.java:737)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:593)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.collectionFunctionOrSubselect(HqlSqlBaseWalker.java:5000)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4695)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2166)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2141)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2116)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2094)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2091)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:832)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:626)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:330)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:278)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:276)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:192)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:144)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:113)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:73)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:162)
	at org.hibernate.internal.AbstractSharedSessionContract.getQueryPlan(AbstractSharedSessionContract.java:613)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:725)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:114)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy161.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:87)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:63)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:76)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:56)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:146)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:216)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1051)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.util.Optional.map(Optional.java:215)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.business.BusinessApplication.main(BusinessApplication.java:17)
15/05/2022 18:32:03 WARN  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentController': Unsatisfied dependency expressed through field 'commentService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentServiceImpl': Unsatisfied dependency expressed through field 'postRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'postRepository' defined in com.core.repository.Post.PostRepository defined in @EnableJpaRepositories declared on BusinessApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)! Reason: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!
15/05/2022 18:32:03 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 18:32:03 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 18:32:03 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 18:32:03 INFO  - Stopping service [Tomcat]
15/05/2022 18:32:03 INFO  - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
15/05/2022 18:32:03 ERROR - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentController': Unsatisfied dependency expressed through field 'commentService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentServiceImpl': Unsatisfied dependency expressed through field 'postRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'postRepository' defined in com.core.repository.Post.PostRepository defined in @EnableJpaRepositories declared on BusinessApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)! Reason: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.business.BusinessApplication.main(BusinessApplication.java:17)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentServiceImpl': Unsatisfied dependency expressed through field 'postRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'postRepository' defined in com.core.repository.Post.PostRepository defined in @EnableJpaRepositories declared on BusinessApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)! Reason: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'postRepository' defined in com.core.repository.Post.PostRepository defined in @EnableJpaRepositories declared on BusinessApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)! Reason: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 34 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)! Reason: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1051)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.util.Optional.map(Optional.java:215)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:93)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:63)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:76)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:56)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:146)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:216)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 66 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.hql.internal.ast.QuerySyntaxException: ??? is not mapped [select p from com.core.entity.Post p where (p.isDelete = :isDelete)And (:followingListUName is empty or p.createdBy in :followingListUName )AND ( :keyword is null or p.title =:keyword or p.content =:keyword)]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:138)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:734)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:114)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy161.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:87)
	... 73 common frames omitted
Caused by: org.hibernate.hql.internal.ast.QuerySyntaxException: ??? is not mapped [select p from com.core.entity.Post p where (p.isDelete = :isDelete)And (:followingListUName is empty or p.createdBy in :followingListUName )AND ( :keyword is null or p.title =:keyword or p.content =:keyword)]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.generateQueryException(QuerySyntaxException.java:79)
	at org.hibernate.QueryException.wrapWithQueryString(QueryException.java:103)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:220)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:144)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:113)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:73)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:162)
	at org.hibernate.internal.AbstractSharedSessionContract.getQueryPlan(AbstractSharedSessionContract.java:613)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:725)
	... 80 common frames omitted
Caused by: org.hibernate.hql.internal.ast.QuerySyntaxException: ??? is not mapped
	at org.hibernate.hql.internal.ast.util.SessionFactoryHelper.requireClassPersister(SessionFactoryHelper.java:169)
	at org.hibernate.hql.internal.ast.tree.FromElementFactory.addFromElement(FromElementFactory.java:91)
	at org.hibernate.hql.internal.ast.tree.FromClause.addFromElement(FromClause.java:77)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.createFromElement(HqlSqlWalker.java:333)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromElement(HqlSqlBaseWalker.java:3765)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromElementList(HqlSqlBaseWalker.java:3654)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromClause(HqlSqlBaseWalker.java:737)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:593)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.collectionFunctionOrSubselect(HqlSqlBaseWalker.java:5000)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4695)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2166)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2141)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2116)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2094)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2091)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:832)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:626)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:330)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:278)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:276)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:192)
	... 86 common frames omitted
15/05/2022 18:33:14 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 10736 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 18:33:14 INFO  - The following profiles are active: dev
15/05/2022 18:33:16 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 18:33:16 INFO  - Finished Spring Data repository scanning in 98 ms. Found 14 JPA repository interfaces.
15/05/2022 18:33:17 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$1d25dca2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 18:33:17 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 18:33:17 INFO  - Starting service [Tomcat]
15/05/2022 18:33:17 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 18:33:17 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 18:33:17 INFO  - Root WebApplicationContext: initialization completed in 3255 ms
15/05/2022 18:33:18 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 18:33:18 INFO  - HikariPool-1 - Starting...
15/05/2022 18:33:18 INFO  - HikariPool-1 - Start completed.
15/05/2022 18:33:18 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 18:33:18 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 18:33:18 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 18:33:18 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 18:33:22 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 18:33:22 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 18:33:23 INFO  - readPublicKey: dev_public.key
15/05/2022 18:33:23 ERROR - <AST>:1:74: unexpected AST node: :
15/05/2022 18:33:23 ERROR - <AST>:1:74: unexpected AST node: :
antlr.NoViableAltException: unexpected AST node: :
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.path(HqlSqlBaseWalker.java:977)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromElement(HqlSqlBaseWalker.java:3713)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromElementList(HqlSqlBaseWalker.java:3654)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromClause(HqlSqlBaseWalker.java:737)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:593)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.collectionFunctionOrSubselect(HqlSqlBaseWalker.java:5000)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4695)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2166)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2141)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2116)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2094)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2091)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:832)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:626)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:330)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:278)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:276)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:192)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:144)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:113)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:73)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:162)
	at org.hibernate.internal.AbstractSharedSessionContract.getQueryPlan(AbstractSharedSessionContract.java:613)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:725)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:114)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy161.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:87)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:63)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:76)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:56)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:146)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:216)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1051)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.util.Optional.map(Optional.java:215)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.business.BusinessApplication.main(BusinessApplication.java:17)
15/05/2022 18:33:23 WARN  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentController': Unsatisfied dependency expressed through field 'commentService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentServiceImpl': Unsatisfied dependency expressed through field 'postRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'postRepository' defined in com.core.repository.Post.PostRepository defined in @EnableJpaRepositories declared on BusinessApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)! Reason: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!
15/05/2022 18:33:23 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 18:33:23 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 18:33:23 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 18:33:23 INFO  - Stopping service [Tomcat]
15/05/2022 18:33:23 INFO  - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
15/05/2022 18:33:23 ERROR - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentController': Unsatisfied dependency expressed through field 'commentService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentServiceImpl': Unsatisfied dependency expressed through field 'postRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'postRepository' defined in com.core.repository.Post.PostRepository defined in @EnableJpaRepositories declared on BusinessApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)! Reason: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.business.BusinessApplication.main(BusinessApplication.java:17)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentServiceImpl': Unsatisfied dependency expressed through field 'postRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'postRepository' defined in com.core.repository.Post.PostRepository defined in @EnableJpaRepositories declared on BusinessApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)! Reason: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'postRepository' defined in com.core.repository.Post.PostRepository defined in @EnableJpaRepositories declared on BusinessApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)! Reason: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 34 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)! Reason: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1051)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.util.Optional.map(Optional.java:215)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:93)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:63)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:76)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:56)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:146)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:216)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 66 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.hql.internal.ast.QuerySyntaxException: ??? is not mapped [select p from com.core.entity.Post p where (p.isDelete = :isDelete) AND (:followingListUName is empty or p.createdBy in :followingListUName) AND ( :keyword is null or p.title =:keyword or p.content =:keyword)]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:138)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:734)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:114)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy161.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:87)
	... 73 common frames omitted
Caused by: org.hibernate.hql.internal.ast.QuerySyntaxException: ??? is not mapped [select p from com.core.entity.Post p where (p.isDelete = :isDelete) AND (:followingListUName is empty or p.createdBy in :followingListUName) AND ( :keyword is null or p.title =:keyword or p.content =:keyword)]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.generateQueryException(QuerySyntaxException.java:79)
	at org.hibernate.QueryException.wrapWithQueryString(QueryException.java:103)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:220)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:144)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:113)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:73)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:162)
	at org.hibernate.internal.AbstractSharedSessionContract.getQueryPlan(AbstractSharedSessionContract.java:613)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:725)
	... 80 common frames omitted
Caused by: org.hibernate.hql.internal.ast.QuerySyntaxException: ??? is not mapped
	at org.hibernate.hql.internal.ast.util.SessionFactoryHelper.requireClassPersister(SessionFactoryHelper.java:169)
	at org.hibernate.hql.internal.ast.tree.FromElementFactory.addFromElement(FromElementFactory.java:91)
	at org.hibernate.hql.internal.ast.tree.FromClause.addFromElement(FromClause.java:77)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.createFromElement(HqlSqlWalker.java:333)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromElement(HqlSqlBaseWalker.java:3765)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromElementList(HqlSqlBaseWalker.java:3654)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromClause(HqlSqlBaseWalker.java:737)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:593)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.collectionFunctionOrSubselect(HqlSqlBaseWalker.java:5000)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4695)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2166)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2141)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2116)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2094)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2091)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:832)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:626)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:330)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:278)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:276)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:192)
	... 86 common frames omitted
15/05/2022 18:34:02 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 10624 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 18:34:02 INFO  - The following profiles are active: dev
15/05/2022 18:34:04 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 18:34:04 INFO  - Finished Spring Data repository scanning in 98 ms. Found 14 JPA repository interfaces.
15/05/2022 18:34:04 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$e521d9e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 18:34:05 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 18:34:05 INFO  - Starting service [Tomcat]
15/05/2022 18:34:05 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 18:34:05 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 18:34:05 INFO  - Root WebApplicationContext: initialization completed in 3249 ms
15/05/2022 18:34:05 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 18:34:05 INFO  - HikariPool-1 - Starting...
15/05/2022 18:34:05 INFO  - HikariPool-1 - Start completed.
15/05/2022 18:34:05 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 18:34:06 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 18:34:06 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 18:34:06 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 18:34:10 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 18:34:10 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 18:34:10 INFO  - readPublicKey: dev_public.key
15/05/2022 18:34:11 ERROR - <AST>:1:74: unexpected AST node: :
15/05/2022 18:34:11 ERROR - <AST>:1:74: unexpected AST node: :
antlr.NoViableAltException: unexpected AST node: :
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.path(HqlSqlBaseWalker.java:977)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromElement(HqlSqlBaseWalker.java:3713)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromElementList(HqlSqlBaseWalker.java:3654)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromClause(HqlSqlBaseWalker.java:737)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:593)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.collectionFunctionOrSubselect(HqlSqlBaseWalker.java:5000)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4695)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2166)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2141)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2116)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2094)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2091)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:832)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:626)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:330)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:278)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:276)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:192)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:144)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:113)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:73)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:162)
	at org.hibernate.internal.AbstractSharedSessionContract.getQueryPlan(AbstractSharedSessionContract.java:613)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:725)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:114)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy161.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:87)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:63)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:76)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:56)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:146)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:216)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1051)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.util.Optional.map(Optional.java:215)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.business.BusinessApplication.main(BusinessApplication.java:17)
15/05/2022 18:34:11 WARN  - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentController': Unsatisfied dependency expressed through field 'commentService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentServiceImpl': Unsatisfied dependency expressed through field 'postRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'postRepository' defined in com.core.repository.Post.PostRepository defined in @EnableJpaRepositories declared on BusinessApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)! Reason: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!
15/05/2022 18:34:11 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 18:34:11 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 18:34:11 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 18:34:11 INFO  - Stopping service [Tomcat]
15/05/2022 18:34:11 INFO  - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
15/05/2022 18:34:11 ERROR - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentController': Unsatisfied dependency expressed through field 'commentService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentServiceImpl': Unsatisfied dependency expressed through field 'postRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'postRepository' defined in com.core.repository.Post.PostRepository defined in @EnableJpaRepositories declared on BusinessApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)! Reason: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.business.BusinessApplication.main(BusinessApplication.java:17)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentServiceImpl': Unsatisfied dependency expressed through field 'postRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'postRepository' defined in com.core.repository.Post.PostRepository defined in @EnableJpaRepositories declared on BusinessApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)! Reason: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:660)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'postRepository' defined in com.core.repository.Post.PostRepository defined in @EnableJpaRepositories declared on BusinessApplication: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)! Reason: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:657)
	... 34 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)! Reason: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:106)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:94)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1051)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:96)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:86)
	at java.util.Optional.map(Optional.java:215)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:86)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:360)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230)
	at org.springframework.data.util.Lazy.get(Lazy.java:114)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract org.springframework.data.domain.Page com.core.repository.Post.PostRepository.searchAll(java.lang.Long,java.lang.String,java.util.List,org.springframework.data.domain.Pageable)!
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:93)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:63)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:76)
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:56)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:146)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:216)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:102)
	... 66 common frames omitted
Caused by: java.lang.IllegalArgumentException: org.hibernate.hql.internal.ast.QuerySyntaxException: ??? is not mapped [select p from com.core.entity.Post p where (p.isDelete = :isDelete) AND (:followingListUName is empty or p.createdBy in :followingListUName) AND ( :keyword is null or p.title like :keyword or p.content like :keyword)]
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:138)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:734)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:114)
	at sun.reflect.GeneratedMethodAccessor83.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at com.sun.proxy.$Proxy161.createQuery(Unknown Source)
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:87)
	... 73 common frames omitted
Caused by: org.hibernate.hql.internal.ast.QuerySyntaxException: ??? is not mapped [select p from com.core.entity.Post p where (p.isDelete = :isDelete) AND (:followingListUName is empty or p.createdBy in :followingListUName) AND ( :keyword is null or p.title like :keyword or p.content like :keyword)]
	at org.hibernate.hql.internal.ast.QuerySyntaxException.generateQueryException(QuerySyntaxException.java:79)
	at org.hibernate.QueryException.wrapWithQueryString(QueryException.java:103)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:220)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:144)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:113)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:73)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:162)
	at org.hibernate.internal.AbstractSharedSessionContract.getQueryPlan(AbstractSharedSessionContract.java:613)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:725)
	... 80 common frames omitted
Caused by: org.hibernate.hql.internal.ast.QuerySyntaxException: ??? is not mapped
	at org.hibernate.hql.internal.ast.util.SessionFactoryHelper.requireClassPersister(SessionFactoryHelper.java:169)
	at org.hibernate.hql.internal.ast.tree.FromElementFactory.addFromElement(FromElementFactory.java:91)
	at org.hibernate.hql.internal.ast.tree.FromClause.addFromElement(FromClause.java:77)
	at org.hibernate.hql.internal.ast.HqlSqlWalker.createFromElement(HqlSqlWalker.java:333)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromElement(HqlSqlBaseWalker.java:3765)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromElementList(HqlSqlBaseWalker.java:3654)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.fromClause(HqlSqlBaseWalker.java:737)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:593)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.collectionFunctionOrSubselect(HqlSqlBaseWalker.java:5000)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4695)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2166)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2141)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2116)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2094)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2091)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:832)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:626)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:330)
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:278)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:276)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:192)
	... 86 common frames omitted
15/05/2022 18:37:25 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 12144 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 18:37:25 INFO  - The following profiles are active: dev
15/05/2022 18:37:27 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 18:37:27 INFO  - Finished Spring Data repository scanning in 99 ms. Found 14 JPA repository interfaces.
15/05/2022 18:37:28 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$aa6ac012] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 18:37:28 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 18:37:28 INFO  - Starting service [Tomcat]
15/05/2022 18:37:28 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 18:37:29 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 18:37:29 INFO  - Root WebApplicationContext: initialization completed in 3534 ms
15/05/2022 18:37:29 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 18:37:29 INFO  - HikariPool-1 - Starting...
15/05/2022 18:37:29 INFO  - HikariPool-1 - Start completed.
15/05/2022 18:37:29 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 18:37:29 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 18:37:29 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 18:37:29 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 18:37:33 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 18:37:33 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 18:37:34 INFO  - readPublicKey: dev_public.key
15/05/2022 18:37:35 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 18:37:35 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 18:37:35 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 18:37:35 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 18:37:35 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 18:37:35 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 18:37:35 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 18:37:35 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 18:37:35 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 18:37:35 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 18:37:35 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 18:37:35 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 18:37:35 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 18:37:35 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 18:37:35 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 18:37:35 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 18:37:35 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 18:37:35 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@20a7dc29, org.springframework.security.web.context.SecurityContextPersistenceFilter@3aee27e1, org.springframework.security.web.header.HeaderWriterFilter@7beb2da0, org.springframework.web.filter.CorsFilter@61a4a71c, org.springframework.security.web.authentication.logout.LogoutFilter@23b89195, com.business.authencation.JwtAuthenticationFilter@296c6cc1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4ba7a9e4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@646af766, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3d233253, org.springframework.security.web.session.SessionManagementFilter@42994d28, org.springframework.security.web.access.ExceptionTranslationFilter@29eeb1bb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@37cb41fa]
15/05/2022 18:37:36 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 18:37:36 INFO  - Started BusinessApplication in 11.488 seconds (JVM running for 12.84)
15/05/2022 18:37:36 INFO  - Account management already exsit.
15/05/2022 18:37:37 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 18:53:03 INFO  - hoanhtranh1|login
15/05/2022 19:12:53 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 19:12:53 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 19:12:53 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 19:13:00 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 5972 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 19:13:00 INFO  - The following profiles are active: dev
15/05/2022 19:13:03 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 19:13:04 INFO  - Finished Spring Data repository scanning in 143 ms. Found 14 JPA repository interfaces.
15/05/2022 19:13:04 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$f5e3aae6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 19:13:05 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 19:13:05 INFO  - Starting service [Tomcat]
15/05/2022 19:13:05 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 19:13:05 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 19:13:05 INFO  - Root WebApplicationContext: initialization completed in 4813 ms
15/05/2022 19:13:05 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 19:13:05 INFO  - HikariPool-1 - Starting...
15/05/2022 19:13:06 INFO  - HikariPool-1 - Start completed.
15/05/2022 19:13:06 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 19:13:06 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 19:13:06 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 19:13:06 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 19:13:11 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 19:13:11 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 19:13:11 INFO  - readPublicKey: dev_public.key
15/05/2022 19:13:12 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 19:13:13 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 19:13:13 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 19:13:13 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 19:13:13 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 19:13:13 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 19:13:13 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 19:13:13 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 19:13:13 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 19:13:13 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 19:13:13 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 19:13:13 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 19:13:13 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 19:13:13 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 19:13:13 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 19:13:13 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 19:13:13 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 19:13:13 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@23b89195, org.springframework.security.web.context.SecurityContextPersistenceFilter@32f7b6a2, org.springframework.security.web.header.HeaderWriterFilter@49702efb, org.springframework.web.filter.CorsFilter@73cb4016, org.springframework.security.web.authentication.logout.LogoutFilter@551a7123, com.business.authencation.JwtAuthenticationFilter@4bafe92f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7e83251e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@505c675a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@64a768e7, org.springframework.security.web.session.SessionManagementFilter@529e1192, org.springframework.security.web.access.ExceptionTranslationFilter@56926ff1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4eed10a1]
15/05/2022 19:13:14 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 19:13:14 INFO  - Started BusinessApplication in 14.844 seconds (JVM running for 16.223)
15/05/2022 19:13:14 INFO  - Account management already exsit.
15/05/2022 19:13:15 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 20:38:42 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 20:38:42 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 20:38:42 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 20:38:54 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 9748 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 20:38:54 INFO  - The following profiles are active: dev
15/05/2022 20:38:57 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 20:38:58 INFO  - Finished Spring Data repository scanning in 98 ms. Found 14 JPA repository interfaces.
15/05/2022 20:38:58 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$7440e198] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 20:38:58 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 20:38:58 INFO  - Starting service [Tomcat]
15/05/2022 20:38:58 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 20:38:59 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 20:38:59 INFO  - Root WebApplicationContext: initialization completed in 4190 ms
15/05/2022 20:38:59 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 20:38:59 INFO  - HikariPool-1 - Starting...
15/05/2022 20:38:59 INFO  - HikariPool-1 - Start completed.
15/05/2022 20:38:59 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 20:39:00 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 20:39:00 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 20:39:00 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 20:39:04 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 20:39:04 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 20:39:05 INFO  - readPublicKey: dev_public.key
15/05/2022 20:39:06 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 20:39:06 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 20:39:06 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 20:39:06 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 20:39:06 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 20:39:06 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 20:39:06 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 20:39:06 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 20:39:06 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 20:39:06 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 20:39:06 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 20:39:06 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 20:39:06 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 20:39:06 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 20:39:06 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 20:39:06 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 20:39:06 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 20:39:06 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@55c9400d, org.springframework.security.web.context.SecurityContextPersistenceFilter@64a768e7, org.springframework.security.web.header.HeaderWriterFilter@4ad3f3d, org.springframework.web.filter.CorsFilter@650d95e6, org.springframework.security.web.authentication.logout.LogoutFilter@3217ac36, com.business.authencation.JwtAuthenticationFilter@6c884b0d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@413e4756, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@56005b40, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5c1ec792, org.springframework.security.web.session.SessionManagementFilter@23b89195, org.springframework.security.web.access.ExceptionTranslationFilter@647afb93, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7a6ccc46]
15/05/2022 20:39:07 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 20:39:07 INFO  - Started BusinessApplication in 13.225 seconds (JVM running for 14.361)
15/05/2022 20:39:07 INFO  - Account management already exsit.
15/05/2022 20:39:08 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 20:58:43 ERROR - errorHoanhtranh1 - POST 0:0:0:0:0:0:0:1:19010/business/account-managers/search - query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
15/05/2022 20:59:00 ERROR - errorHoanhtranh1 - POST 0:0:0:0:0:0:0:1:19010/business/account-managers/search - query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
15/05/2022 21:00:05 ERROR - errorHoanhtranh1 - POST 0:0:0:0:0:0:0:1:19010/business/follow/follow - query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
15/05/2022 21:00:05 ERROR - errorHoanhtranh1 - POST 0:0:0:0:0:0:0:1:19010/business/account-managers/search - query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
15/05/2022 21:00:15 ERROR - errorHoanhtranh1 - POST 0:0:0:0:0:0:0:1:19010/business/account-managers/search - query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
15/05/2022 21:06:25 ERROR - errorHoanhtranh1 - POST 0:0:0:0:0:0:0:1:19010/business/follow/follow - null
15/05/2022 21:26:42 INFO  - hoanhtranh1|login
15/05/2022 21:31:23 INFO  - hoanhtranh1|login
15/05/2022 21:31:27 INFO  - hoanhtranh1|login
15/05/2022 21:52:00 ERROR - null
java.lang.NullPointerException: null
	at com.business.utilts.ApplicationUtils.isLogin(ApplicationUtils.java:54)
	at com.business.services.impl.AcountManagementServiceImpl.getUserByUser(AcountManagementServiceImpl.java:415)
	at com.business.services.impl.AcountManagementServiceImpl.createNewAccount(AcountManagementServiceImpl.java:216)
	at com.business.services.impl.AcountManagementServiceImpl$$FastClassBySpringCGLIB$$13ba1f05.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.business.services.impl.AcountManagementServiceImpl$$EnhancerBySpringCGLIB$$d1f4ea26.createNewAccount(<generated>)
	at com.business.Controller.AcountManagementAPI.create(AcountManagementAPI.java:181)
	at com.business.Controller.AcountManagementAPI$$FastClassBySpringCGLIB$$3896358.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:123)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.business.Controller.AcountManagementAPI$$EnhancerBySpringCGLIB$$267a82ff.create(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at com.business.authencation.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:204)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
15/05/2022 21:56:31 ERROR - null
java.lang.NullPointerException: null
	at com.business.utilts.ApplicationUtils.isLogin(ApplicationUtils.java:54)
	at com.business.services.impl.AcountManagementServiceImpl.getUserByUser(AcountManagementServiceImpl.java:415)
	at com.business.services.impl.AcountManagementServiceImpl.createNewAccount(AcountManagementServiceImpl.java:216)
	at com.business.services.impl.AcountManagementServiceImpl$$FastClassBySpringCGLIB$$13ba1f05.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.business.services.impl.AcountManagementServiceImpl$$EnhancerBySpringCGLIB$$d1f4ea26.createNewAccount(<generated>)
	at com.business.Controller.AcountManagementAPI.create(AcountManagementAPI.java:181)
	at com.business.Controller.AcountManagementAPI$$FastClassBySpringCGLIB$$3896358.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:123)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)
	at com.business.Controller.AcountManagementAPI$$EnhancerBySpringCGLIB$$267a82ff.create(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at com.business.authencation.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:204)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
15/05/2022 21:57:01 ERROR - error - POST 0:0:0:0:0:0:0:1:19010/business/account-managers/register - Xin lỗi, hoanhtranh2 đã tồn tại
15/05/2022 21:57:06 INFO  - sangvip2|login
15/05/2022 21:57:06 ERROR - sangvip2|Bad credentials
15/05/2022 21:57:06 ERROR - error - POST 0:0:0:0:0:0:0:1:19010/business/account-managers/login - Tên tài khoản hoặc mật khẩu không chính xác
15/05/2022 21:57:12 INFO  - sangvip2|login
15/05/2022 21:57:12 ERROR - sangvip2|Bad credentials
15/05/2022 21:57:12 ERROR - error - POST 0:0:0:0:0:0:0:1:19010/business/account-managers/login - Tên tài khoản hoặc mật khẩu không chính xác
15/05/2022 21:57:26 INFO  - sangvip2|login
15/05/2022 21:57:26 ERROR - sangvip2|Bad credentials
15/05/2022 21:57:26 ERROR - error - POST 0:0:0:0:0:0:0:1:19010/business/account-managers/login - Tên tài khoản hoặc mật khẩu không chính xác
15/05/2022 21:57:32 INFO  - nguyenthauanh|login
15/05/2022 21:57:48 ERROR - errorNguyenThauAnh - POST 0:0:0:0:0:0:0:1:19010/business/comment/add - Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"])
15/05/2022 21:57:57 ERROR - errorNguyenThauAnh - POST 0:0:0:0:0:0:0:1:19010/business/comment/add - Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["userRoleList"])
15/05/2022 21:58:05 ERROR - errorNguyenThauAnh - POST 0:0:0:0:0:0:0:1:19010/business/comment/add - Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["userRoleList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.UserRole["role"])
15/05/2022 21:58:13 ERROR - errorNguyenThauAnh - POST 0:0:0:0:0:0:0:1:19010/business/comment/add - Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["userRoleList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.UserRole["role"])
15/05/2022 21:58:56 ERROR - errorNguyenThauAnh - POST 0:0:0:0:0:0:0:1:19010/business/comment/add - Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["userRoleList"])
15/05/2022 21:59:18 ERROR - errorNguyenThauAnh - POST 0:0:0:0:0:0:0:1:19010/business/comment/add - Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["userRoleList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.UserRole["role"])
15/05/2022 21:59:35 ERROR - errorNguyenThauAnh - POST 0:0:0:0:0:0:0:1:19010/business/comment/add - Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["userRoleList"])
15/05/2022 22:00:58 ERROR - errorNguyenThauAnh - POST 0:0:0:0:0:0:0:1:19010/business/comment/add - Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["userRoleList"])
15/05/2022 22:01:27 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 22:01:27 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 22:01:27 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 22:01:41 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 15452 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 22:01:41 INFO  - The following profiles are active: dev
15/05/2022 22:01:44 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 22:01:44 INFO  - Finished Spring Data repository scanning in 99 ms. Found 14 JPA repository interfaces.
15/05/2022 22:01:45 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$942efd3d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 22:01:45 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 22:01:45 INFO  - Starting service [Tomcat]
15/05/2022 22:01:45 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 22:01:45 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 22:01:45 INFO  - Root WebApplicationContext: initialization completed in 4549 ms
15/05/2022 22:01:46 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 22:01:46 INFO  - HikariPool-1 - Starting...
15/05/2022 22:01:46 INFO  - HikariPool-1 - Start completed.
15/05/2022 22:01:46 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 22:01:46 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 22:01:46 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 22:01:47 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 22:01:51 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 22:01:51 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 22:01:52 INFO  - readPublicKey: dev_public.key
15/05/2022 22:01:53 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 22:01:53 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 22:01:53 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 22:01:53 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 22:01:53 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 22:01:53 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 22:01:53 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 22:01:53 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 22:01:53 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 22:01:53 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 22:01:53 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 22:01:53 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 22:01:53 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 22:01:53 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 22:01:53 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 22:01:53 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 22:01:53 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 22:01:53 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2f4daa0c, org.springframework.security.web.context.SecurityContextPersistenceFilter@4358e209, org.springframework.security.web.header.HeaderWriterFilter@3763c93b, org.springframework.web.filter.CorsFilter@4bd52ca4, org.springframework.security.web.authentication.logout.LogoutFilter@34151e5d, com.business.authencation.JwtAuthenticationFilter@463e413b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@58292496, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6820dd90, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5d9e5f2f, org.springframework.security.web.session.SessionManagementFilter@63cdae1d, org.springframework.security.web.access.ExceptionTranslationFilter@413e4756, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5aede1ef]
15/05/2022 22:01:54 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 22:01:54 INFO  - Started BusinessApplication in 14.334 seconds (JVM running for 15.658)
15/05/2022 22:01:54 INFO  - Account management already exsit.
15/05/2022 22:01:55 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 22:04:55 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 22:04:55 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 22:04:55 INFO  - HikariPool-1 - Shutdown completed.
15/05/2022 22:05:04 INFO  - Starting BusinessApplication using Java 1.8.0_281 on DESKTOP-HENEIFB with PID 8416 (D:\laptrinhmang_cuoiky\backend\module-business\target\classes started by User in D:\laptrinhmang_cuoiky\backend)
15/05/2022 22:05:04 INFO  - The following profiles are active: dev
15/05/2022 22:05:07 INFO  - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15/05/2022 22:05:07 INFO  - Finished Spring Data repository scanning in 126 ms. Found 14 JPA repository interfaces.
15/05/2022 22:05:08 INFO  - Bean 'cacheConfig' of type [com.core.config.CacheConfig$$EnhancerBySpringCGLIB$$1da1409d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
15/05/2022 22:05:08 INFO  - Tomcat initialized with port(s): 19010 (http)
15/05/2022 22:05:08 INFO  - Starting service [Tomcat]
15/05/2022 22:05:08 INFO  - Starting Servlet engine: [Apache Tomcat/9.0.53]
15/05/2022 22:05:08 INFO  - Initializing Spring embedded WebApplicationContext
15/05/2022 22:05:08 INFO  - Root WebApplicationContext: initialization completed in 3706 ms
15/05/2022 22:05:08 WARN  - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
15/05/2022 22:05:08 INFO  - HikariPool-1 - Starting...
15/05/2022 22:05:09 INFO  - HikariPool-1 - Start completed.
15/05/2022 22:05:09 INFO  - HHH000204: Processing PersistenceUnitInfo [name: default]
15/05/2022 22:05:09 INFO  - HHH000412: Hibernate ORM core version 5.4.32.Final
15/05/2022 22:05:09 INFO  - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15/05/2022 22:05:09 INFO  - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
15/05/2022 22:05:13 INFO  - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15/05/2022 22:05:13 INFO  - Initialized JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 22:05:14 INFO  - readPublicKey: dev_public.key
15/05/2022 22:05:16 INFO  - Exposing 1 endpoint(s) beneath base path '/actuator'
15/05/2022 22:05:16 INFO  - Will secure Ant [pattern='/account-managers/test'] with []
15/05/2022 22:05:16 INFO  - Will secure Ant [pattern='/actuator/**'] with []
15/05/2022 22:05:16 INFO  - Will secure Ant [pattern='/csrf'] with []
15/05/2022 22:05:16 INFO  - Will secure Ant [pattern='/my/docs'] with []
15/05/2022 22:05:16 INFO  - Will secure Ant [pattern='/v2/api-docs/**'] with []
15/05/2022 22:05:16 INFO  - Will secure Ant [pattern='/swagger.json'] with []
15/05/2022 22:05:16 INFO  - Will secure Ant [pattern='/configuration/security'] with []
15/05/2022 22:05:16 INFO  - Will secure Ant [pattern='/configuration/ui'] with []
15/05/2022 22:05:16 INFO  - Will secure Ant [pattern='/swagger-resources/**'] with []
15/05/2022 22:05:16 INFO  - Will secure Ant [pattern='/configuration/**'] with []
15/05/2022 22:05:16 INFO  - Will secure Ant [pattern='/swagger-ui/**'] with []
15/05/2022 22:05:16 INFO  - Will secure Ant [pattern='/swagger-ui.html'] with []
15/05/2022 22:05:16 INFO  - Will secure Ant [pattern='/webjars/**'] with []
15/05/2022 22:05:16 INFO  - Will secure Ant [pattern='/account-managers/login'] with []
15/05/2022 22:05:16 INFO  - Will secure Ant [pattern='/account-managers/register'] with []
15/05/2022 22:05:16 INFO  - Will secure Ant [pattern='/files/downloadFile/**'] with []
15/05/2022 22:05:16 INFO  - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@646af766, org.springframework.security.web.context.SecurityContextPersistenceFilter@4d6a32d4, org.springframework.security.web.header.HeaderWriterFilter@18645844, org.springframework.web.filter.CorsFilter@a739cd9, org.springframework.security.web.authentication.logout.LogoutFilter@505c675a, com.business.authencation.JwtAuthenticationFilter@3c36c9f4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@c377641, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@60f6aa4b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@610f3f1b, org.springframework.security.web.session.SessionManagementFilter@3210c2de, org.springframework.security.web.access.ExceptionTranslationFilter@591f5945, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7e8e2fc7]
15/05/2022 22:05:17 INFO  - Tomcat started on port(s): 19010 (http) with context path '/business'
15/05/2022 22:05:18 INFO  - Started BusinessApplication in 14.163 seconds (JVM running for 15.682)
15/05/2022 22:05:18 INFO  - Account management already exsit.
15/05/2022 22:05:18 INFO  - Initializing Spring DispatcherServlet 'dispatcherServlet'
15/05/2022 22:05:19 ERROR - errorNguyenThauAnh - POST 0:0:0:0:0:0:0:1:19010/business/comment/add - Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"])
15/05/2022 22:05:19 ERROR - jwtAuthentication - POST 0:0:0:0:0:0:0:1:19010/business/comment/add - Request processing failed; nested exception is org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"]->com.core.entity.User["followingList"]->org.hibernate.collection.internal.PersistentBag[0]->com.core.entity.Follow["follower"])
15/05/2022 22:05:19 ERROR - Servlet.service() for servlet [dispatcherServlet] in context with path [/business] threw exception
java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:584)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:227)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.getWriter(OnCommittedResponseWrapper.java:156)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:114)
	at org.springframework.security.web.util.OnCommittedResponseWrapper.getWriter(OnCommittedResponseWrapper.java:156)
	at com.business.authencation.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:152)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
15/05/2022 22:06:08 INFO  - Closing JPA EntityManagerFactory for persistence unit 'default'
15/05/2022 22:06:08 INFO  - HikariPool-1 - Shutdown initiated...
15/05/2022 22:06:08 INFO  - HikariPool-1 - Shutdown completed.
